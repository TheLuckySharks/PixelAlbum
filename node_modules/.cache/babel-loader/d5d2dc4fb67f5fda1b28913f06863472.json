{"ast":null,"code":"import _asyncToGenerator from \"/Users/am/Desktop/PixelAlbum/PixelAlbum/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"/Users/am/Desktop/PixelAlbum/PixelAlbum/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _toArray from \"/Users/am/Desktop/PixelAlbum/PixelAlbum/node_modules/@babel/runtime/helpers/esm/toArray.js\";\nimport _slicedToArray from \"/Users/am/Desktop/PixelAlbum/PixelAlbum/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/am/Desktop/PixelAlbum/PixelAlbum/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _createClass from \"/Users/am/Desktop/PixelAlbum/PixelAlbum/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/am/Desktop/PixelAlbum/PixelAlbum/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _defineProperty from \"/Users/am/Desktop/PixelAlbum/PixelAlbum/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _regeneratorRuntime from \"/Users/am/Desktop/PixelAlbum/PixelAlbum/node_modules/@babel/runtime/regenerator/index.js\";\n// src/utils.ts\nvar HOLE = -1;\nvar NAN = -2;\nvar NEGATIVE_INFINITY = -3;\nvar NEGATIVE_ZERO = -4;\nvar NULL = -5;\nvar POSITIVE_INFINITY = -6;\nvar UNDEFINED = -7;\nvar TYPE_BIGINT = \"B\";\nvar TYPE_DATE = \"D\";\nvar TYPE_ERROR = \"E\";\nvar TYPE_MAP = \"M\";\nvar TYPE_NULL_OBJECT = \"N\";\nvar TYPE_PROMISE = \"P\";\nvar TYPE_REGEXP = \"R\";\nvar TYPE_SET = \"S\";\nvar TYPE_SYMBOL = \"Y\";\nvar TYPE_URL = \"U\";\nvar TYPE_PREVIOUS_RESOLVED = \"Z\";\n\nvar Deferred = /*#__PURE__*/_createClass(function Deferred() {\n  var _this = this;\n\n  _classCallCheck(this, Deferred);\n\n  _defineProperty(this, \"promise\", void 0);\n\n  _defineProperty(this, \"resolve\", void 0);\n\n  _defineProperty(this, \"reject\", void 0);\n\n  this.promise = new Promise(function (resolve, reject) {\n    _this.resolve = resolve;\n    _this.reject = reject;\n  });\n});\n\nfunction createLineSplittingTransform() {\n  var decoder = new TextDecoder();\n  var leftover = \"\";\n  return new TransformStream({\n    transform: function transform(chunk, controller) {\n      var str = decoder.decode(chunk, {\n        stream: true\n      });\n      var parts = (leftover + str).split(\"\\n\");\n      leftover = parts.pop() || \"\";\n\n      var _iterator = _createForOfIteratorHelper(parts),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var part = _step.value;\n          controller.enqueue(part);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    },\n    flush: function flush(controller) {\n      if (leftover) {\n        controller.enqueue(leftover);\n      }\n    }\n  });\n} // src/flatten.ts\n\n\nfunction flatten(input) {\n  var indices = this.indices;\n  var existing = indices.get(input);\n  if (existing) return [existing];\n  if (input === void 0) return UNDEFINED;\n  if (input === null) return NULL;\n  if (Number.isNaN(input)) return NAN;\n  if (input === Number.POSITIVE_INFINITY) return POSITIVE_INFINITY;\n  if (input === Number.NEGATIVE_INFINITY) return NEGATIVE_INFINITY;\n  if (input === 0 && 1 / input < 0) return NEGATIVE_ZERO;\n  var index = this.index++;\n  indices.set(input, index);\n  stringify.call(this, input, index);\n  return index;\n}\n\nfunction stringify(input, index) {\n  var _this2 = this;\n\n  var deferred = this.deferred,\n      plugins = this.plugins,\n      postPlugins = this.postPlugins;\n  var str = this.stringified;\n  var stack = [[input, index]];\n\n  while (stack.length > 0) {\n    var _stack$pop = stack.pop(),\n        _stack$pop2 = _slicedToArray(_stack$pop, 2),\n        input2 = _stack$pop2[0],\n        index2 = _stack$pop2[1];\n\n    var partsForObj = function partsForObj(obj) {\n      return Object.keys(obj).map(function (k) {\n        return \"\\\"_\".concat(flatten.call(_this2, k), \"\\\":\").concat(flatten.call(_this2, obj[k]));\n      }).join(\",\");\n    };\n\n    var error = null;\n\n    switch (typeof input2) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        str[index2] = JSON.stringify(input2);\n        break;\n\n      case \"bigint\":\n        str[index2] = \"[\\\"\".concat(TYPE_BIGINT, \"\\\",\\\"\").concat(input2, \"\\\"]\");\n        break;\n\n      case \"symbol\":\n        {\n          var keyFor = Symbol.keyFor(input2);\n\n          if (!keyFor) {\n            error = new Error(\"Cannot encode symbol unless created with Symbol.for()\");\n          } else {\n            str[index2] = \"[\\\"\".concat(TYPE_SYMBOL, \"\\\",\").concat(JSON.stringify(keyFor), \"]\");\n          }\n\n          break;\n        }\n\n      case \"object\":\n        {\n          if (!input2) {\n            str[index2] = \"\".concat(NULL);\n            break;\n          }\n\n          var isArray = Array.isArray(input2);\n          var pluginHandled = false;\n\n          if (!isArray && plugins) {\n            var _iterator2 = _createForOfIteratorHelper(plugins),\n                _step2;\n\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var plugin = _step2.value;\n                var pluginResult = plugin(input2);\n\n                if (Array.isArray(pluginResult)) {\n                  pluginHandled = true;\n\n                  var _pluginResult = _toArray(pluginResult),\n                      pluginIdentifier = _pluginResult[0],\n                      rest = _pluginResult.slice(1);\n\n                  str[index2] = \"[\".concat(JSON.stringify(pluginIdentifier));\n\n                  if (rest.length > 0) {\n                    str[index2] += \",\".concat(rest.map(function (v) {\n                      return flatten.call(_this2, v);\n                    }).join(\",\"));\n                  }\n\n                  str[index2] += \"]\";\n                  break;\n                }\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n          }\n\n          if (!pluginHandled) {\n            var result = isArray ? \"[\" : \"{\";\n\n            if (isArray) {\n              for (var i = 0; i < input2.length; i++) {\n                result += (i ? \",\" : \"\") + (i in input2 ? flatten.call(this, input2[i]) : HOLE);\n              }\n\n              str[index2] = \"\".concat(result, \"]\");\n            } else if (input2 instanceof Date) {\n              str[index2] = \"[\\\"\".concat(TYPE_DATE, \"\\\",\").concat(input2.getTime(), \"]\");\n            } else if (input2 instanceof URL) {\n              str[index2] = \"[\\\"\".concat(TYPE_URL, \"\\\",\").concat(JSON.stringify(input2.href), \"]\");\n            } else if (input2 instanceof RegExp) {\n              str[index2] = \"[\\\"\".concat(TYPE_REGEXP, \"\\\",\").concat(JSON.stringify(input2.source), \",\").concat(JSON.stringify(input2.flags), \"]\");\n            } else if (input2 instanceof Set) {\n              if (input2.size > 0) {\n                str[index2] = \"[\\\"\".concat(TYPE_SET, \"\\\",\").concat(_toConsumableArray(input2).map(function (val) {\n                  return flatten.call(_this2, val);\n                }).join(\",\"), \"]\");\n              } else {\n                str[index2] = \"[\\\"\".concat(TYPE_SET, \"\\\"]\");\n              }\n            } else if (input2 instanceof Map) {\n              if (input2.size > 0) {\n                str[index2] = \"[\\\"\".concat(TYPE_MAP, \"\\\",\").concat(_toConsumableArray(input2).flatMap(function (_ref) {\n                  var _ref2 = _slicedToArray(_ref, 2),\n                      k = _ref2[0],\n                      v = _ref2[1];\n\n                  return [flatten.call(_this2, k), flatten.call(_this2, v)];\n                }).join(\",\"), \"]\");\n              } else {\n                str[index2] = \"[\\\"\".concat(TYPE_MAP, \"\\\"]\");\n              }\n            } else if (input2 instanceof Promise) {\n              str[index2] = \"[\\\"\".concat(TYPE_PROMISE, \"\\\",\").concat(index2, \"]\");\n              deferred[index2] = input2;\n            } else if (input2 instanceof Error) {\n              str[index2] = \"[\\\"\".concat(TYPE_ERROR, \"\\\",\").concat(JSON.stringify(input2.message));\n\n              if (input2.name !== \"Error\") {\n                str[index2] += \",\".concat(JSON.stringify(input2.name));\n              }\n\n              str[index2] += \"]\";\n            } else if (Object.getPrototypeOf(input2) === null) {\n              str[index2] = \"[\\\"\".concat(TYPE_NULL_OBJECT, \"\\\",{\").concat(partsForObj(input2), \"}]\");\n            } else if (isPlainObject(input2)) {\n              str[index2] = \"{\".concat(partsForObj(input2), \"}\");\n            } else {\n              error = new Error(\"Cannot encode object with prototype\");\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          var _isArray = Array.isArray(input2);\n\n          var _pluginHandled = false;\n\n          if (!_isArray && plugins) {\n            var _iterator3 = _createForOfIteratorHelper(plugins),\n                _step3;\n\n            try {\n              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                var _plugin = _step3.value;\n\n                var _pluginResult2 = _plugin(input2);\n\n                if (Array.isArray(_pluginResult2)) {\n                  _pluginHandled = true;\n\n                  var _pluginResult3 = _toArray(_pluginResult2),\n                      _pluginIdentifier = _pluginResult3[0],\n                      _rest = _pluginResult3.slice(1);\n\n                  str[index2] = \"[\".concat(JSON.stringify(_pluginIdentifier));\n\n                  if (_rest.length > 0) {\n                    str[index2] += \",\".concat(_rest.map(function (v) {\n                      return flatten.call(_this2, v);\n                    }).join(\",\"));\n                  }\n\n                  str[index2] += \"]\";\n                  break;\n                }\n              }\n            } catch (err) {\n              _iterator3.e(err);\n            } finally {\n              _iterator3.f();\n            }\n          }\n\n          if (!_pluginHandled) {\n            error = new Error(\"Cannot encode function or unexpected type\");\n          }\n        }\n    }\n\n    if (error) {\n      var _pluginHandled2 = false;\n\n      if (postPlugins) {\n        var _iterator4 = _createForOfIteratorHelper(postPlugins),\n            _step4;\n\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var _plugin2 = _step4.value;\n\n            var _pluginResult4 = _plugin2(input2);\n\n            if (Array.isArray(_pluginResult4)) {\n              _pluginHandled2 = true;\n\n              var _pluginResult5 = _toArray(_pluginResult4),\n                  _pluginIdentifier2 = _pluginResult5[0],\n                  _rest2 = _pluginResult5.slice(1);\n\n              str[index2] = \"[\".concat(JSON.stringify(_pluginIdentifier2));\n\n              if (_rest2.length > 0) {\n                str[index2] += \",\".concat(_rest2.map(function (v) {\n                  return flatten.call(_this2, v);\n                }).join(\",\"));\n              }\n\n              str[index2] += \"]\";\n              break;\n            }\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n      }\n\n      if (!_pluginHandled2) {\n        throw error;\n      }\n    }\n  }\n}\n\nvar objectProtoNames = Object.getOwnPropertyNames(Object.prototype).sort().join(\"\\0\");\n\nfunction isPlainObject(thing) {\n  var proto = Object.getPrototypeOf(thing);\n  return proto === Object.prototype || proto === null || Object.getOwnPropertyNames(proto).sort().join(\"\\0\") === objectProtoNames;\n} // src/unflatten.ts\n\n\nvar globalObj = typeof window !== \"undefined\" ? window : typeof globalThis !== \"undefined\" ? globalThis : void 0;\n\nfunction unflatten(parsed) {\n  var hydrated = this.hydrated,\n      values = this.values;\n  if (typeof parsed === \"number\") return hydrate.call(this, parsed);\n  if (!Array.isArray(parsed) || !parsed.length) throw new SyntaxError();\n  var startIndex = values.length;\n\n  var _iterator5 = _createForOfIteratorHelper(parsed),\n      _step5;\n\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var value = _step5.value;\n      values.push(value);\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n\n  hydrated.length = values.length;\n  return hydrate.call(this, startIndex);\n}\n\nfunction hydrate(index) {\n  var hydrated = this.hydrated,\n      values = this.values,\n      deferred = this.deferred,\n      plugins = this.plugins;\n  var result;\n  var stack = [[index, function (v) {\n    result = v;\n  }]];\n  var postRun = [];\n\n  var _loop = function _loop() {\n    var _stack$pop3 = stack.pop(),\n        _stack$pop4 = _slicedToArray(_stack$pop3, 2),\n        index2 = _stack$pop4[0],\n        set = _stack$pop4[1];\n\n    switch (index2) {\n      case UNDEFINED:\n        set(void 0);\n        return \"continue\";\n\n      case NULL:\n        set(null);\n        return \"continue\";\n\n      case NAN:\n        set(NaN);\n        return \"continue\";\n\n      case POSITIVE_INFINITY:\n        set(Infinity);\n        return \"continue\";\n\n      case NEGATIVE_INFINITY:\n        set(-Infinity);\n        return \"continue\";\n\n      case NEGATIVE_ZERO:\n        set(-0);\n        return \"continue\";\n    }\n\n    if (hydrated[index2]) {\n      set(hydrated[index2]);\n      return \"continue\";\n    }\n\n    var value = values[index2];\n\n    if (!value || typeof value !== \"object\") {\n      hydrated[index2] = value;\n      set(value);\n      return \"continue\";\n    }\n\n    if (Array.isArray(value)) {\n      if (typeof value[0] === \"string\") {\n        var _value = _slicedToArray(value, 3),\n            type = _value[0],\n            b = _value[1],\n            c = _value[2];\n\n        var _ret2 = function () {\n          switch (type) {\n            case TYPE_DATE:\n              set(hydrated[index2] = new Date(b));\n              return {\n                v: \"continue\"\n              };\n\n            case TYPE_URL:\n              set(hydrated[index2] = new URL(b));\n              return {\n                v: \"continue\"\n              };\n\n            case TYPE_BIGINT:\n              set(hydrated[index2] = BigInt(b));\n              return {\n                v: \"continue\"\n              };\n\n            case TYPE_REGEXP:\n              set(hydrated[index2] = new RegExp(b, c));\n              return {\n                v: \"continue\"\n              };\n\n            case TYPE_SYMBOL:\n              set(hydrated[index2] = Symbol.for(b));\n              return {\n                v: \"continue\"\n              };\n\n            case TYPE_SET:\n              var newSet = /* @__PURE__ */new Set();\n              hydrated[index2] = newSet;\n\n              for (var i = 1; i < value.length; i++) {\n                stack.push([value[i], function (v) {\n                  newSet.add(v);\n                }]);\n              }\n\n              set(newSet);\n              return {\n                v: \"continue\"\n              };\n\n            case TYPE_MAP:\n              var map = /* @__PURE__ */new Map();\n              hydrated[index2] = map;\n\n              var _loop2 = function _loop2(_i) {\n                var r = [];\n                stack.push([value[_i + 1], function (v) {\n                  r[1] = v;\n                }]);\n                stack.push([value[_i], function (k) {\n                  r[0] = k;\n                }]);\n                postRun.push(function () {\n                  map.set(r[0], r[1]);\n                });\n              };\n\n              for (var _i = 1; _i < value.length; _i += 2) {\n                _loop2(_i);\n              }\n\n              set(map);\n              return {\n                v: \"continue\"\n              };\n\n            case TYPE_NULL_OBJECT:\n              var obj = /* @__PURE__ */Object.create(null);\n              hydrated[index2] = obj;\n\n              var _iterator6 = _createForOfIteratorHelper(Object.keys(b).reverse()),\n                  _step6;\n\n              try {\n                var _loop3 = function _loop3() {\n                  var key = _step6.value;\n                  var r = [];\n                  stack.push([b[key], function (v) {\n                    r[1] = v;\n                  }]);\n                  stack.push([Number(key.slice(1)), function (k) {\n                    r[0] = k;\n                  }]);\n                  postRun.push(function () {\n                    obj[r[0]] = r[1];\n                  });\n                };\n\n                for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                  _loop3();\n                }\n              } catch (err) {\n                _iterator6.e(err);\n              } finally {\n                _iterator6.f();\n              }\n\n              set(obj);\n              return {\n                v: \"continue\"\n              };\n\n            case TYPE_PROMISE:\n              if (hydrated[b]) {\n                set(hydrated[index2] = hydrated[b]);\n              } else {\n                var d = new Deferred();\n                deferred[b] = d;\n                set(hydrated[index2] = d.promise);\n              }\n\n              return {\n                v: \"continue\"\n              };\n\n            case TYPE_ERROR:\n              var _value2 = _slicedToArray(value, 3),\n                  message = _value2[1],\n                  errorType = _value2[2];\n\n              var error = errorType && globalObj && globalObj[errorType] ? new globalObj[errorType](message) : new Error(message);\n              hydrated[index2] = error;\n              set(error);\n              return {\n                v: \"continue\"\n              };\n\n            case TYPE_PREVIOUS_RESOLVED:\n              set(hydrated[index2] = hydrated[b]);\n              return {\n                v: \"continue\"\n              };\n\n            default:\n              if (Array.isArray(plugins)) {\n                var _ret3 = function () {\n                  var r = [];\n                  var vals = value.slice(1);\n\n                  var _loop4 = function _loop4(_i2) {\n                    var v = vals[_i2];\n                    stack.push([v, function (v2) {\n                      r[_i2] = v2;\n                    }]);\n                  };\n\n                  for (var _i2 = 0; _i2 < vals.length; _i2++) {\n                    _loop4(_i2);\n                  }\n\n                  postRun.push(function () {\n                    var _iterator7 = _createForOfIteratorHelper(plugins),\n                        _step7;\n\n                    try {\n                      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                        var plugin = _step7.value;\n                        var result2 = plugin.apply(void 0, [value[0]].concat(r));\n\n                        if (result2) {\n                          set(hydrated[index2] = result2.value);\n                          return;\n                        }\n                      }\n                    } catch (err) {\n                      _iterator7.e(err);\n                    } finally {\n                      _iterator7.f();\n                    }\n\n                    throw new SyntaxError();\n                  });\n                  return {\n                    v: {\n                      v: \"continue\"\n                    }\n                  };\n                }();\n\n                if (typeof _ret3 === \"object\") return _ret3.v;\n              }\n\n              throw new SyntaxError();\n          }\n        }();\n\n        if (typeof _ret2 === \"object\") return _ret2.v;\n      } else {\n        var _ret4 = function () {\n          var array = [];\n          hydrated[index2] = array;\n\n          var _loop5 = function _loop5(i) {\n            var n = value[i];\n\n            if (n !== HOLE) {\n              stack.push([n, function (v) {\n                array[i] = v;\n              }]);\n            }\n          };\n\n          for (var i = 0; i < value.length; i++) {\n            _loop5(i);\n          }\n\n          set(array);\n          return {\n            v: \"continue\"\n          };\n        }();\n\n        if (typeof _ret4 === \"object\") return _ret4.v;\n      }\n    } else {\n      var _ret5 = function () {\n        var object = {};\n        hydrated[index2] = object;\n\n        var _iterator8 = _createForOfIteratorHelper(Object.keys(value).reverse()),\n            _step8;\n\n        try {\n          var _loop6 = function _loop6() {\n            var key = _step8.value;\n            var r = [];\n            stack.push([value[key], function (v) {\n              r[1] = v;\n            }]);\n            stack.push([Number(key.slice(1)), function (k) {\n              r[0] = k;\n            }]);\n            postRun.push(function () {\n              object[r[0]] = r[1];\n            });\n          };\n\n          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n            _loop6();\n          }\n        } catch (err) {\n          _iterator8.e(err);\n        } finally {\n          _iterator8.f();\n        }\n\n        set(object);\n        return {\n          v: \"continue\"\n        };\n      }();\n\n      if (typeof _ret5 === \"object\") return _ret5.v;\n    }\n  };\n\n  while (stack.length > 0) {\n    var _ret = _loop();\n\n    if (_ret === \"continue\") continue;\n  }\n\n  while (postRun.length > 0) {\n    postRun.pop()();\n  }\n\n  return result;\n} // src/turbo-stream.ts\n\n\nfunction decode(_x, _x2) {\n  return _decode.apply(this, arguments);\n}\n\nfunction _decode() {\n  _decode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(readable, options) {\n    var _ref4, plugins, done, reader, decoder, decoded, donePromise;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _ref4 = options !== null && options !== void 0 ? options : {}, plugins = _ref4.plugins;\n            done = new Deferred();\n            reader = readable.pipeThrough(createLineSplittingTransform()).getReader();\n            decoder = {\n              values: [],\n              hydrated: [],\n              deferred: {},\n              plugins: plugins\n            };\n            _context2.next = 6;\n            return decodeInitial.call(decoder, reader);\n\n          case 6:\n            decoded = _context2.sent;\n            donePromise = done.promise;\n\n            if (decoded.done) {\n              done.resolve();\n            } else {\n              donePromise = decodeDeferred.call(decoder, reader).then(done.resolve).catch(function (reason) {\n                for (var _i4 = 0, _Object$values = Object.values(decoder.deferred); _i4 < _Object$values.length; _i4++) {\n                  var deferred = _Object$values[_i4];\n                  deferred.reject(reason);\n                }\n\n                done.reject(reason);\n              });\n            }\n\n            return _context2.abrupt(\"return\", {\n              done: donePromise.then(function () {\n                return reader.closed;\n              }),\n              value: decoded.value\n            });\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _decode.apply(this, arguments);\n}\n\nfunction decodeInitial(_x3) {\n  return _decodeInitial.apply(this, arguments);\n}\n\nfunction _decodeInitial() {\n  _decodeInitial = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(reader) {\n    var read, line;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return reader.read();\n\n          case 2:\n            read = _context3.sent;\n\n            if (read.value) {\n              _context3.next = 5;\n              break;\n            }\n\n            throw new SyntaxError();\n\n          case 5:\n            _context3.prev = 5;\n            line = JSON.parse(read.value);\n            _context3.next = 12;\n            break;\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](5);\n            throw new SyntaxError();\n\n          case 12:\n            return _context3.abrupt(\"return\", {\n              done: read.done,\n              value: unflatten.call(this, line)\n            });\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this, [[5, 9]]);\n  }));\n  return _decodeInitial.apply(this, arguments);\n}\n\nfunction decodeDeferred(_x4) {\n  return _decodeDeferred.apply(this, arguments);\n}\n\nfunction _decodeDeferred() {\n  _decodeDeferred = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(reader) {\n    var read, line, colonIndex, deferredId, deferred, lineData, jsonLine, value, _colonIndex, _deferredId, _deferred, _lineData, _jsonLine, _value3;\n\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return reader.read();\n\n          case 2:\n            read = _context4.sent;\n\n          case 3:\n            if (read.done) {\n              _context4.next = 50;\n              break;\n            }\n\n            if (read.value) {\n              _context4.next = 6;\n              break;\n            }\n\n            return _context4.abrupt(\"continue\", 3);\n\n          case 6:\n            line = read.value;\n            _context4.t0 = line[0];\n            _context4.next = _context4.t0 === TYPE_PROMISE ? 10 : _context4.t0 === TYPE_ERROR ? 27 : 44;\n            break;\n\n          case 10:\n            colonIndex = line.indexOf(\":\");\n            deferredId = Number(line.slice(1, colonIndex));\n            deferred = this.deferred[deferredId];\n\n            if (deferred) {\n              _context4.next = 15;\n              break;\n            }\n\n            throw new Error(\"Deferred ID \".concat(deferredId, \" not found in stream\"));\n\n          case 15:\n            lineData = line.slice(colonIndex + 1);\n            jsonLine = void 0;\n            _context4.prev = 17;\n            jsonLine = JSON.parse(lineData);\n            _context4.next = 24;\n            break;\n\n          case 21:\n            _context4.prev = 21;\n            _context4.t1 = _context4[\"catch\"](17);\n            throw new SyntaxError();\n\n          case 24:\n            value = unflatten.call(this, jsonLine);\n            deferred.resolve(value);\n            return _context4.abrupt(\"break\", 45);\n\n          case 27:\n            _colonIndex = line.indexOf(\":\");\n            _deferredId = Number(line.slice(1, _colonIndex));\n            _deferred = this.deferred[_deferredId];\n\n            if (_deferred) {\n              _context4.next = 32;\n              break;\n            }\n\n            throw new Error(\"Deferred ID \".concat(_deferredId, \" not found in stream\"));\n\n          case 32:\n            _lineData = line.slice(_colonIndex + 1);\n            _jsonLine = void 0;\n            _context4.prev = 34;\n            _jsonLine = JSON.parse(_lineData);\n            _context4.next = 41;\n            break;\n\n          case 38:\n            _context4.prev = 38;\n            _context4.t2 = _context4[\"catch\"](34);\n            throw new SyntaxError();\n\n          case 41:\n            _value3 = unflatten.call(this, _jsonLine);\n\n            _deferred.reject(_value3);\n\n            return _context4.abrupt(\"break\", 45);\n\n          case 44:\n            throw new SyntaxError();\n\n          case 45:\n            _context4.next = 47;\n            return reader.read();\n\n          case 47:\n            read = _context4.sent;\n            _context4.next = 3;\n            break;\n\n          case 50:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, this, [[17, 21], [34, 38]]);\n  }));\n  return _decodeDeferred.apply(this, arguments);\n}\n\nfunction encode(input, options) {\n  var _ref3 = options !== null && options !== void 0 ? options : {},\n      plugins = _ref3.plugins,\n      postPlugins = _ref3.postPlugins,\n      signal = _ref3.signal;\n\n  var encoder = {\n    deferred: {},\n    index: 0,\n    indices: /* @__PURE__ */new Map(),\n    stringified: [],\n    plugins: plugins,\n    postPlugins: postPlugins,\n    signal: signal\n  };\n  var textEncoder = new TextEncoder();\n  var lastSentIndex = 0;\n  var readable = new ReadableStream({\n    start: function start(controller) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var id, seenPromises, _loop7, _i3, _Object$entries, _ret6;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                id = flatten.call(encoder, input);\n\n                if (!Array.isArray(id)) {\n                  _context.next = 3;\n                  break;\n                }\n\n                throw new Error(\"This should never happen\");\n\n              case 3:\n                if (id < 0) {\n                  controller.enqueue(textEncoder.encode(\"\".concat(id, \"\\n\")));\n                } else {\n                  controller.enqueue(textEncoder.encode(\"[\".concat(encoder.stringified.join(\",\"), \"]\\n\")));\n                  lastSentIndex = encoder.stringified.length - 1;\n                }\n\n                seenPromises = /* @__PURE__ */new WeakSet();\n\n              case 5:\n                if (!(Object.keys(encoder.deferred).length > 0)) {\n                  _context.next = 19;\n                  break;\n                }\n\n                _loop7 = function _loop7() {\n                  var _Object$entries$_i = _slicedToArray(_Object$entries[_i3], 2),\n                      deferredId = _Object$entries$_i[0],\n                      deferred = _Object$entries$_i[1];\n\n                  if (seenPromises.has(deferred)) return \"continue\";\n                  seenPromises.add(encoder.deferred[Number(deferredId)] = raceSignal(deferred, encoder.signal).then(function (resolved) {\n                    var id2 = flatten.call(encoder, resolved);\n\n                    if (Array.isArray(id2)) {\n                      controller.enqueue(textEncoder.encode(\"\".concat(TYPE_PROMISE).concat(deferredId, \":[[\\\"\").concat(TYPE_PREVIOUS_RESOLVED, \"\\\",\").concat(id2[0], \"]]\\n\")));\n                      encoder.index++;\n                      lastSentIndex++;\n                    } else if (id2 < 0) {\n                      controller.enqueue(textEncoder.encode(\"\".concat(TYPE_PROMISE).concat(deferredId, \":\").concat(id2, \"\\n\")));\n                    } else {\n                      var values = encoder.stringified.slice(lastSentIndex + 1).join(\",\");\n                      controller.enqueue(textEncoder.encode(\"\".concat(TYPE_PROMISE).concat(deferredId, \":[\").concat(values, \"]\\n\")));\n                      lastSentIndex = encoder.stringified.length - 1;\n                    }\n                  }, function (reason) {\n                    if (!reason || typeof reason !== \"object\" || !(reason instanceof Error)) {\n                      reason = new Error(\"An unknown error occurred\");\n                    }\n\n                    var id2 = flatten.call(encoder, reason);\n\n                    if (Array.isArray(id2)) {\n                      controller.enqueue(textEncoder.encode(\"\".concat(TYPE_ERROR).concat(deferredId, \":[[\\\"\").concat(TYPE_PREVIOUS_RESOLVED, \"\\\",\").concat(id2[0], \"]]\\n\")));\n                      encoder.index++;\n                      lastSentIndex++;\n                    } else if (id2 < 0) {\n                      controller.enqueue(textEncoder.encode(\"\".concat(TYPE_ERROR).concat(deferredId, \":\").concat(id2, \"\\n\")));\n                    } else {\n                      var values = encoder.stringified.slice(lastSentIndex + 1).join(\",\");\n                      controller.enqueue(textEncoder.encode(\"\".concat(TYPE_ERROR).concat(deferredId, \":[\").concat(values, \"]\\n\")));\n                      lastSentIndex = encoder.stringified.length - 1;\n                    }\n                  }).finally(function () {\n                    delete encoder.deferred[Number(deferredId)];\n                  }));\n                };\n\n                _i3 = 0, _Object$entries = Object.entries(encoder.deferred);\n\n              case 8:\n                if (!(_i3 < _Object$entries.length)) {\n                  _context.next = 15;\n                  break;\n                }\n\n                _ret6 = _loop7();\n\n                if (!(_ret6 === \"continue\")) {\n                  _context.next = 12;\n                  break;\n                }\n\n                return _context.abrupt(\"continue\", 12);\n\n              case 12:\n                _i3++;\n                _context.next = 8;\n                break;\n\n              case 15:\n                _context.next = 17;\n                return Promise.race(Object.values(encoder.deferred));\n\n              case 17:\n                _context.next = 5;\n                break;\n\n              case 19:\n                _context.next = 21;\n                return Promise.all(Object.values(encoder.deferred));\n\n              case 21:\n                controller.close();\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  });\n  return readable;\n}\n\nfunction raceSignal(promise, signal) {\n  if (!signal) return promise;\n  if (signal.aborted) return Promise.reject(signal.reason || new Error(\"Signal was aborted.\"));\n  var abort = new Promise(function (resolve, reject) {\n    signal.addEventListener(\"abort\", function (event) {\n      reject(signal.reason || new Error(\"Signal was aborted.\"));\n    });\n    promise.then(resolve).catch(reject);\n  });\n  abort.catch(function () {});\n  return Promise.race([abort, promise]);\n}\n\nexport { decode, encode };","map":{"version":3,"sources":["/Users/am/Desktop/PixelAlbum/PixelAlbum/node_modules/turbo-stream/dist/turbo-stream.mjs"],"names":["HOLE","NAN","NEGATIVE_INFINITY","NEGATIVE_ZERO","NULL","POSITIVE_INFINITY","UNDEFINED","TYPE_BIGINT","TYPE_DATE","TYPE_ERROR","TYPE_MAP","TYPE_NULL_OBJECT","TYPE_PROMISE","TYPE_REGEXP","TYPE_SET","TYPE_SYMBOL","TYPE_URL","TYPE_PREVIOUS_RESOLVED","Deferred","promise","Promise","resolve","reject","createLineSplittingTransform","decoder","TextDecoder","leftover","TransformStream","transform","chunk","controller","str","decode","stream","parts","split","pop","part","enqueue","flush","flatten","input","indices","existing","get","Number","isNaN","index","set","stringify","call","deferred","plugins","postPlugins","stringified","stack","length","input2","index2","partsForObj","obj","Object","keys","map","k","join","error","JSON","keyFor","Symbol","Error","isArray","Array","pluginHandled","plugin","pluginResult","pluginIdentifier","rest","v","result","i","Date","getTime","URL","href","RegExp","source","flags","Set","size","val","Map","flatMap","message","name","getPrototypeOf","isPlainObject","objectProtoNames","getOwnPropertyNames","prototype","sort","thing","proto","globalObj","window","globalThis","unflatten","parsed","hydrated","values","hydrate","SyntaxError","startIndex","value","push","postRun","NaN","Infinity","type","b","c","BigInt","for","newSet","add","r","create","reverse","key","slice","d","errorType","vals","v2","result2","array","n","object","readable","options","done","reader","pipeThrough","getReader","decodeInitial","decoded","donePromise","decodeDeferred","then","catch","reason","closed","read","line","parse","colonIndex","indexOf","deferredId","lineData","jsonLine","encode","signal","encoder","textEncoder","TextEncoder","lastSentIndex","ReadableStream","start","id","seenPromises","WeakSet","has","raceSignal","resolved","id2","finally","entries","race","all","close","aborted","abort","addEventListener","event"],"mappings":";;;;;;;;;AAAA;AACA,IAAIA,IAAI,GAAG,CAAC,CAAZ;AACA,IAAIC,GAAG,GAAG,CAAC,CAAX;AACA,IAAIC,iBAAiB,GAAG,CAAC,CAAzB;AACA,IAAIC,aAAa,GAAG,CAAC,CAArB;AACA,IAAIC,IAAI,GAAG,CAAC,CAAZ;AACA,IAAIC,iBAAiB,GAAG,CAAC,CAAzB;AACA,IAAIC,SAAS,GAAG,CAAC,CAAjB;AACA,IAAIC,WAAW,GAAG,GAAlB;AACA,IAAIC,SAAS,GAAG,GAAhB;AACA,IAAIC,UAAU,GAAG,GAAjB;AACA,IAAIC,QAAQ,GAAG,GAAf;AACA,IAAIC,gBAAgB,GAAG,GAAvB;AACA,IAAIC,YAAY,GAAG,GAAnB;AACA,IAAIC,WAAW,GAAG,GAAlB;AACA,IAAIC,QAAQ,GAAG,GAAf;AACA,IAAIC,WAAW,GAAG,GAAlB;AACA,IAAIC,QAAQ,GAAG,GAAf;AACA,IAAIC,sBAAsB,GAAG,GAA7B;;AACA,IAAIC,QAAQ,6BAIV,oBAAc;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACZ,OAAKC,OAAL,GAAe,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC9C,IAAA,KAAI,CAACD,OAAL,GAAeA,OAAf;AACA,IAAA,KAAI,CAACC,MAAL,GAAcA,MAAd;AACD,GAHc,CAAf;AAID,CATS,CAAZ;;AAWA,SAASC,4BAAT,GAAwC;AACtC,MAAMC,OAAO,GAAG,IAAIC,WAAJ,EAAhB;AACA,MAAIC,QAAQ,GAAG,EAAf;AACA,SAAO,IAAIC,eAAJ,CAAoB;AACzBC,IAAAA,SADyB,qBACfC,KADe,EACRC,UADQ,EACI;AAC3B,UAAMC,GAAG,GAAGP,OAAO,CAACQ,MAAR,CAAeH,KAAf,EAAsB;AAAEI,QAAAA,MAAM,EAAE;AAAV,OAAtB,CAAZ;AACA,UAAMC,KAAK,GAAG,CAACR,QAAQ,GAAGK,GAAZ,EAAiBI,KAAjB,CAAuB,IAAvB,CAAd;AACAT,MAAAA,QAAQ,GAAGQ,KAAK,CAACE,GAAN,MAAe,EAA1B;;AAH2B,iDAIRF,KAJQ;AAAA;;AAAA;AAI3B,4DAA0B;AAAA,cAAfG,IAAe;AACxBP,UAAAA,UAAU,CAACQ,OAAX,CAAmBD,IAAnB;AACD;AAN0B;AAAA;AAAA;AAAA;AAAA;AAO5B,KARwB;AASzBE,IAAAA,KATyB,iBASnBT,UATmB,EASP;AAChB,UAAIJ,QAAJ,EAAc;AACZI,QAAAA,UAAU,CAACQ,OAAX,CAAmBZ,QAAnB;AACD;AACF;AAbwB,GAApB,CAAP;AAeD,C,CAED;;;AACA,SAASc,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,MAAQC,OAAR,GAAoB,IAApB,CAAQA,OAAR;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAACE,GAAR,CAAYH,KAAZ,CAAjB;AACA,MAAIE,QAAJ,EACE,OAAO,CAACA,QAAD,CAAP;AACF,MAAIF,KAAK,KAAK,KAAK,CAAnB,EACE,OAAOnC,SAAP;AACF,MAAImC,KAAK,KAAK,IAAd,EACE,OAAOrC,IAAP;AACF,MAAIyC,MAAM,CAACC,KAAP,CAAaL,KAAb,CAAJ,EACE,OAAOxC,GAAP;AACF,MAAIwC,KAAK,KAAKI,MAAM,CAACxC,iBAArB,EACE,OAAOA,iBAAP;AACF,MAAIoC,KAAK,KAAKI,MAAM,CAAC3C,iBAArB,EACE,OAAOA,iBAAP;AACF,MAAIuC,KAAK,KAAK,CAAV,IAAe,IAAIA,KAAJ,GAAY,CAA/B,EACE,OAAOtC,aAAP;AACF,MAAM4C,KAAK,GAAG,KAAKA,KAAL,EAAd;AACAL,EAAAA,OAAO,CAACM,GAAR,CAAYP,KAAZ,EAAmBM,KAAnB;AACAE,EAAAA,SAAS,CAACC,IAAV,CAAe,IAAf,EAAqBT,KAArB,EAA4BM,KAA5B;AACA,SAAOA,KAAP;AACD;;AACD,SAASE,SAAT,CAAmBR,KAAnB,EAA0BM,KAA1B,EAAiC;AAAA;;AAC/B,MAAQI,QAAR,GAA2C,IAA3C,CAAQA,QAAR;AAAA,MAAkBC,OAAlB,GAA2C,IAA3C,CAAkBA,OAAlB;AAAA,MAA2BC,WAA3B,GAA2C,IAA3C,CAA2BA,WAA3B;AACA,MAAMtB,GAAG,GAAG,KAAKuB,WAAjB;AACA,MAAMC,KAAK,GAAG,CAAC,CAACd,KAAD,EAAQM,KAAR,CAAD,CAAd;;AACA,SAAOQ,KAAK,CAACC,MAAN,GAAe,CAAtB,EAAyB;AACvB,qBAAyBD,KAAK,CAACnB,GAAN,EAAzB;AAAA;AAAA,QAAOqB,MAAP;AAAA,QAAeC,MAAf;;AACA,QAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD;AAAA,aAASC,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiBG,GAAjB,CAAqB,UAACC,CAAD;AAAA,4BAAYxB,OAAO,CAACU,IAAR,CAAa,MAAb,EAAmBc,CAAnB,CAAZ,gBAAsCxB,OAAO,CAACU,IAAR,CAAa,MAAb,EAAmBU,GAAG,CAACI,CAAD,CAAtB,CAAtC;AAAA,OAArB,EAAyFC,IAAzF,CAA8F,GAA9F,CAAT;AAAA,KAApB;;AACA,QAAIC,KAAK,GAAG,IAAZ;;AACA,YAAQ,OAAOT,MAAf;AACE,WAAK,SAAL;AACA,WAAK,QAAL;AACA,WAAK,QAAL;AACE1B,QAAAA,GAAG,CAAC2B,MAAD,CAAH,GAAcS,IAAI,CAAClB,SAAL,CAAeQ,MAAf,CAAd;AACA;;AACF,WAAK,QAAL;AACE1B,QAAAA,GAAG,CAAC2B,MAAD,CAAH,gBAAmBnD,WAAnB,kBAAoCkD,MAApC;AACA;;AACF,WAAK,QAAL;AAAe;AACb,cAAMW,MAAM,GAAGC,MAAM,CAACD,MAAP,CAAcX,MAAd,CAAf;;AACA,cAAI,CAACW,MAAL,EAAa;AACXF,YAAAA,KAAK,GAAG,IAAII,KAAJ,CACN,uDADM,CAAR;AAGD,WAJD,MAIO;AACLvC,YAAAA,GAAG,CAAC2B,MAAD,CAAH,gBAAmB3C,WAAnB,gBAAmCoD,IAAI,CAAClB,SAAL,CAAemB,MAAf,CAAnC;AACD;;AACD;AACD;;AACD,WAAK,QAAL;AAAe;AACb,cAAI,CAACX,MAAL,EAAa;AACX1B,YAAAA,GAAG,CAAC2B,MAAD,CAAH,aAAiBtD,IAAjB;AACA;AACD;;AACD,cAAMmE,OAAO,GAAGC,KAAK,CAACD,OAAN,CAAcd,MAAd,CAAhB;AACA,cAAIgB,aAAa,GAAG,KAApB;;AACA,cAAI,CAACF,OAAD,IAAYnB,OAAhB,EAAyB;AAAA,wDACFA,OADE;AAAA;;AAAA;AACvB,qEAA8B;AAAA,oBAAnBsB,MAAmB;AAC5B,oBAAMC,YAAY,GAAGD,MAAM,CAACjB,MAAD,CAA3B;;AACA,oBAAIe,KAAK,CAACD,OAAN,CAAcI,YAAd,CAAJ,EAAiC;AAC/BF,kBAAAA,aAAa,GAAG,IAAhB;;AACA,+CAAoCE,YAApC;AAAA,sBAAOC,gBAAP;AAAA,sBAA4BC,IAA5B;;AACA9C,kBAAAA,GAAG,CAAC2B,MAAD,CAAH,cAAkBS,IAAI,CAAClB,SAAL,CAAe2B,gBAAf,CAAlB;;AACA,sBAAIC,IAAI,CAACrB,MAAL,GAAc,CAAlB,EAAqB;AACnBzB,oBAAAA,GAAG,CAAC2B,MAAD,CAAH,eAAmBmB,IAAI,CAACd,GAAL,CAAS,UAACe,CAAD;AAAA,6BAAOtC,OAAO,CAACU,IAAR,CAAa,MAAb,EAAmB4B,CAAnB,CAAP;AAAA,qBAAT,EAAuCb,IAAvC,CAA4C,GAA5C,CAAnB;AACD;;AACDlC,kBAAAA,GAAG,CAAC2B,MAAD,CAAH,IAAe,GAAf;AACA;AACD;AACF;AAbsB;AAAA;AAAA;AAAA;AAAA;AAcxB;;AACD,cAAI,CAACe,aAAL,EAAoB;AAClB,gBAAIM,MAAM,GAAGR,OAAO,GAAG,GAAH,GAAS,GAA7B;;AACA,gBAAIA,OAAJ,EAAa;AACX,mBAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGvB,MAAM,CAACD,MAA3B,EAAmCwB,CAAC,EAApC;AACED,gBAAAA,MAAM,IAAI,CAACC,CAAC,GAAG,GAAH,GAAS,EAAX,KAAkBA,CAAC,IAAIvB,MAAL,GAAcjB,OAAO,CAACU,IAAR,CAAa,IAAb,EAAmBO,MAAM,CAACuB,CAAD,CAAzB,CAAd,GAA8ChF,IAAhE,CAAV;AADF;;AAEA+B,cAAAA,GAAG,CAAC2B,MAAD,CAAH,aAAiBqB,MAAjB;AACD,aAJD,MAIO,IAAItB,MAAM,YAAYwB,IAAtB,EAA4B;AACjClD,cAAAA,GAAG,CAAC2B,MAAD,CAAH,gBAAmBlD,SAAnB,gBAAiCiD,MAAM,CAACyB,OAAP,EAAjC;AACD,aAFM,MAEA,IAAIzB,MAAM,YAAY0B,GAAtB,EAA2B;AAChCpD,cAAAA,GAAG,CAAC2B,MAAD,CAAH,gBAAmB1C,QAAnB,gBAAgCmD,IAAI,CAAClB,SAAL,CAAeQ,MAAM,CAAC2B,IAAtB,CAAhC;AACD,aAFM,MAEA,IAAI3B,MAAM,YAAY4B,MAAtB,EAA8B;AACnCtD,cAAAA,GAAG,CAAC2B,MAAD,CAAH,gBAAmB7C,WAAnB,gBAAmCsD,IAAI,CAAClB,SAAL,CACjCQ,MAAM,CAAC6B,MAD0B,CAAnC,cAEKnB,IAAI,CAAClB,SAAL,CAAeQ,MAAM,CAAC8B,KAAtB,CAFL;AAGD,aAJM,MAIA,IAAI9B,MAAM,YAAY+B,GAAtB,EAA2B;AAChC,kBAAI/B,MAAM,CAACgC,IAAP,GAAc,CAAlB,EAAqB;AACnB1D,gBAAAA,GAAG,CAAC2B,MAAD,CAAH,gBAAmB5C,QAAnB,gBAAgC,mBAAI2C,MAAJ,EAAYM,GAAZ,CAAgB,UAAC2B,GAAD;AAAA,yBAASlD,OAAO,CAACU,IAAR,CAAa,MAAb,EAAmBwC,GAAnB,CAAT;AAAA,iBAAhB,EAAkDzB,IAAlD,CAAuD,GAAvD,CAAhC;AACD,eAFD,MAEO;AACLlC,gBAAAA,GAAG,CAAC2B,MAAD,CAAH,gBAAmB5C,QAAnB;AACD;AACF,aANM,MAMA,IAAI2C,MAAM,YAAYkC,GAAtB,EAA2B;AAChC,kBAAIlC,MAAM,CAACgC,IAAP,GAAc,CAAlB,EAAqB;AACnB1D,gBAAAA,GAAG,CAAC2B,MAAD,CAAH,gBAAmBhD,QAAnB,gBAAgC,mBAAI+C,MAAJ,EAAYmC,OAAZ,CAAoB;AAAA;AAAA,sBAAE5B,CAAF;AAAA,sBAAKc,CAAL;;AAAA,yBAAY,CAC9DtC,OAAO,CAACU,IAAR,CAAa,MAAb,EAAmBc,CAAnB,CAD8D,EAE9DxB,OAAO,CAACU,IAAR,CAAa,MAAb,EAAmB4B,CAAnB,CAF8D,CAAZ;AAAA,iBAApB,EAG7Bb,IAH6B,CAGxB,GAHwB,CAAhC;AAID,eALD,MAKO;AACLlC,gBAAAA,GAAG,CAAC2B,MAAD,CAAH,gBAAmBhD,QAAnB;AACD;AACF,aATM,MASA,IAAI+C,MAAM,YAAYrC,OAAtB,EAA+B;AACpCW,cAAAA,GAAG,CAAC2B,MAAD,CAAH,gBAAmB9C,YAAnB,gBAAoC8C,MAApC;AACAP,cAAAA,QAAQ,CAACO,MAAD,CAAR,GAAmBD,MAAnB;AACD,aAHM,MAGA,IAAIA,MAAM,YAAYa,KAAtB,EAA6B;AAClCvC,cAAAA,GAAG,CAAC2B,MAAD,CAAH,gBAAmBjD,UAAnB,gBAAkC0D,IAAI,CAAClB,SAAL,CAAeQ,MAAM,CAACoC,OAAtB,CAAlC;;AACA,kBAAIpC,MAAM,CAACqC,IAAP,KAAgB,OAApB,EAA6B;AAC3B/D,gBAAAA,GAAG,CAAC2B,MAAD,CAAH,eAAmBS,IAAI,CAAClB,SAAL,CAAeQ,MAAM,CAACqC,IAAtB,CAAnB;AACD;;AACD/D,cAAAA,GAAG,CAAC2B,MAAD,CAAH,IAAe,GAAf;AACD,aANM,MAMA,IAAIG,MAAM,CAACkC,cAAP,CAAsBtC,MAAtB,MAAkC,IAAtC,EAA4C;AACjD1B,cAAAA,GAAG,CAAC2B,MAAD,CAAH,gBAAmB/C,gBAAnB,iBAAyCgD,WAAW,CAACF,MAAD,CAApD;AACD,aAFM,MAEA,IAAIuC,aAAa,CAACvC,MAAD,CAAjB,EAA2B;AAChC1B,cAAAA,GAAG,CAAC2B,MAAD,CAAH,cAAkBC,WAAW,CAACF,MAAD,CAA7B;AACD,aAFM,MAEA;AACLS,cAAAA,KAAK,GAAG,IAAII,KAAJ,CAAU,qCAAV,CAAR;AACD;AACF;;AACD;AACD;;AACD;AAAS;AACP,cAAMC,QAAO,GAAGC,KAAK,CAACD,OAAN,CAAcd,MAAd,CAAhB;;AACA,cAAIgB,cAAa,GAAG,KAApB;;AACA,cAAI,CAACF,QAAD,IAAYnB,OAAhB,EAAyB;AAAA,wDACFA,OADE;AAAA;;AAAA;AACvB,qEAA8B;AAAA,oBAAnBsB,OAAmB;;AAC5B,oBAAMC,cAAY,GAAGD,OAAM,CAACjB,MAAD,CAA3B;;AACA,oBAAIe,KAAK,CAACD,OAAN,CAAcI,cAAd,CAAJ,EAAiC;AAC/BF,kBAAAA,cAAa,GAAG,IAAhB;;AACA,gDAAoCE,cAApC;AAAA,sBAAOC,iBAAP;AAAA,sBAA4BC,KAA5B;;AACA9C,kBAAAA,GAAG,CAAC2B,MAAD,CAAH,cAAkBS,IAAI,CAAClB,SAAL,CAAe2B,iBAAf,CAAlB;;AACA,sBAAIC,KAAI,CAACrB,MAAL,GAAc,CAAlB,EAAqB;AACnBzB,oBAAAA,GAAG,CAAC2B,MAAD,CAAH,eAAmBmB,KAAI,CAACd,GAAL,CAAS,UAACe,CAAD;AAAA,6BAAOtC,OAAO,CAACU,IAAR,CAAa,MAAb,EAAmB4B,CAAnB,CAAP;AAAA,qBAAT,EAAuCb,IAAvC,CAA4C,GAA5C,CAAnB;AACD;;AACDlC,kBAAAA,GAAG,CAAC2B,MAAD,CAAH,IAAe,GAAf;AACA;AACD;AACF;AAbsB;AAAA;AAAA;AAAA;AAAA;AAcxB;;AACD,cAAI,CAACe,cAAL,EAAoB;AAClBP,YAAAA,KAAK,GAAG,IAAII,KAAJ,CAAU,2CAAV,CAAR;AACD;AACF;AA/GH;;AAiHA,QAAIJ,KAAJ,EAAW;AACT,UAAIO,eAAa,GAAG,KAApB;;AACA,UAAIpB,WAAJ,EAAiB;AAAA,oDACMA,WADN;AAAA;;AAAA;AACf,iEAAkC;AAAA,gBAAvBqB,QAAuB;;AAChC,gBAAMC,cAAY,GAAGD,QAAM,CAACjB,MAAD,CAA3B;;AACA,gBAAIe,KAAK,CAACD,OAAN,CAAcI,cAAd,CAAJ,EAAiC;AAC/BF,cAAAA,eAAa,GAAG,IAAhB;;AACA,4CAAoCE,cAApC;AAAA,kBAAOC,kBAAP;AAAA,kBAA4BC,MAA5B;;AACA9C,cAAAA,GAAG,CAAC2B,MAAD,CAAH,cAAkBS,IAAI,CAAClB,SAAL,CAAe2B,kBAAf,CAAlB;;AACA,kBAAIC,MAAI,CAACrB,MAAL,GAAc,CAAlB,EAAqB;AACnBzB,gBAAAA,GAAG,CAAC2B,MAAD,CAAH,eAAmBmB,MAAI,CAACd,GAAL,CAAS,UAACe,CAAD;AAAA,yBAAOtC,OAAO,CAACU,IAAR,CAAa,MAAb,EAAmB4B,CAAnB,CAAP;AAAA,iBAAT,EAAuCb,IAAvC,CAA4C,GAA5C,CAAnB;AACD;;AACDlC,cAAAA,GAAG,CAAC2B,MAAD,CAAH,IAAe,GAAf;AACA;AACD;AACF;AAbc;AAAA;AAAA;AAAA;AAAA;AAchB;;AACD,UAAI,CAACe,eAAL,EAAoB;AAClB,cAAMP,KAAN;AACD;AACF;AACF;AACF;;AACD,IAAI+B,gBAAgB,GAAGpC,MAAM,CAACqC,mBAAP,CAA2BrC,MAAM,CAACsC,SAAlC,EAA6CC,IAA7C,GAAoDnC,IAApD,CAAyD,IAAzD,CAAvB;;AACA,SAAS+B,aAAT,CAAuBK,KAAvB,EAA8B;AAC5B,MAAMC,KAAK,GAAGzC,MAAM,CAACkC,cAAP,CAAsBM,KAAtB,CAAd;AACA,SAAOC,KAAK,KAAKzC,MAAM,CAACsC,SAAjB,IAA8BG,KAAK,KAAK,IAAxC,IAAgDzC,MAAM,CAACqC,mBAAP,CAA2BI,KAA3B,EAAkCF,IAAlC,GAAyCnC,IAAzC,CAA8C,IAA9C,MAAwDgC,gBAA/G;AACD,C,CAED;;;AACA,IAAIM,SAAS,GAAG,OAAOC,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyC,OAAOC,UAAP,KAAsB,WAAtB,GAAoCA,UAApC,GAAiD,KAAK,CAA/G;;AACA,SAASC,SAAT,CAAmBC,MAAnB,EAA2B;AACzB,MAAQC,QAAR,GAA6B,IAA7B,CAAQA,QAAR;AAAA,MAAkBC,MAAlB,GAA6B,IAA7B,CAAkBA,MAAlB;AACA,MAAI,OAAOF,MAAP,KAAkB,QAAtB,EACE,OAAOG,OAAO,CAAC5D,IAAR,CAAa,IAAb,EAAmByD,MAAnB,CAAP;AACF,MAAI,CAACnC,KAAK,CAACD,OAAN,CAAcoC,MAAd,CAAD,IAA0B,CAACA,MAAM,CAACnD,MAAtC,EACE,MAAM,IAAIuD,WAAJ,EAAN;AACF,MAAMC,UAAU,GAAGH,MAAM,CAACrD,MAA1B;;AANyB,8CAOLmD,MAPK;AAAA;;AAAA;AAOzB,2DAA4B;AAAA,UAAjBM,KAAiB;AAC1BJ,MAAAA,MAAM,CAACK,IAAP,CAAYD,KAAZ;AACD;AATwB;AAAA;AAAA;AAAA;AAAA;;AAUzBL,EAAAA,QAAQ,CAACpD,MAAT,GAAkBqD,MAAM,CAACrD,MAAzB;AACA,SAAOsD,OAAO,CAAC5D,IAAR,CAAa,IAAb,EAAmB8D,UAAnB,CAAP;AACD;;AACD,SAASF,OAAT,CAAiB/D,KAAjB,EAAwB;AACtB,MAAQ6D,QAAR,GAAgD,IAAhD,CAAQA,QAAR;AAAA,MAAkBC,MAAlB,GAAgD,IAAhD,CAAkBA,MAAlB;AAAA,MAA0B1D,QAA1B,GAAgD,IAAhD,CAA0BA,QAA1B;AAAA,MAAoCC,OAApC,GAAgD,IAAhD,CAAoCA,OAApC;AACA,MAAI2B,MAAJ;AACA,MAAMxB,KAAK,GAAG,CACZ,CACER,KADF,EAEE,UAAC+B,CAAD,EAAO;AACLC,IAAAA,MAAM,GAAGD,CAAT;AACD,GAJH,CADY,CAAd;AAQA,MAAIqC,OAAO,GAAG,EAAd;;AAXsB;AAapB,sBAAsB5D,KAAK,CAACnB,GAAN,EAAtB;AAAA;AAAA,QAAOsB,MAAP;AAAA,QAAeV,GAAf;;AACA,YAAQU,MAAR;AACE,WAAKpD,SAAL;AACE0C,QAAAA,GAAG,CAAC,KAAK,CAAN,CAAH;AACA;;AACF,WAAK5C,IAAL;AACE4C,QAAAA,GAAG,CAAC,IAAD,CAAH;AACA;;AACF,WAAK/C,GAAL;AACE+C,QAAAA,GAAG,CAACoE,GAAD,CAAH;AACA;;AACF,WAAK/G,iBAAL;AACE2C,QAAAA,GAAG,CAACqE,QAAD,CAAH;AACA;;AACF,WAAKnH,iBAAL;AACE8C,QAAAA,GAAG,CAAC,CAACqE,QAAF,CAAH;AACA;;AACF,WAAKlH,aAAL;AACE6C,QAAAA,GAAG,CAAC,CAAC,CAAF,CAAH;AACA;AAlBJ;;AAoBA,QAAI4D,QAAQ,CAAClD,MAAD,CAAZ,EAAsB;AACpBV,MAAAA,GAAG,CAAC4D,QAAQ,CAAClD,MAAD,CAAT,CAAH;AACA;AACD;;AACD,QAAMuD,KAAK,GAAGJ,MAAM,CAACnD,MAAD,CAApB;;AACA,QAAI,CAACuD,KAAD,IAAU,OAAOA,KAAP,KAAiB,QAA/B,EAAyC;AACvCL,MAAAA,QAAQ,CAAClD,MAAD,CAAR,GAAmBuD,KAAnB;AACAjE,MAAAA,GAAG,CAACiE,KAAD,CAAH;AACA;AACD;;AACD,QAAIzC,KAAK,CAACD,OAAN,CAAc0C,KAAd,CAAJ,EAA0B;AACxB,UAAI,OAAOA,KAAK,CAAC,CAAD,CAAZ,KAAoB,QAAxB,EAAkC;AAChC,oCAAqBA,KAArB;AAAA,YAAOK,IAAP;AAAA,YAAaC,CAAb;AAAA,YAAgBC,CAAhB;;AADgC;AAEhC,kBAAQF,IAAR;AACE,iBAAK9G,SAAL;AACEwC,cAAAA,GAAG,CAAC4D,QAAQ,CAAClD,MAAD,CAAR,GAAmB,IAAIuB,IAAJ,CAASsC,CAAT,CAApB,CAAH;AACA;AAAA;AAAA;;AACF,iBAAKvG,QAAL;AACEgC,cAAAA,GAAG,CAAC4D,QAAQ,CAAClD,MAAD,CAAR,GAAmB,IAAIyB,GAAJ,CAAQoC,CAAR,CAApB,CAAH;AACA;AAAA;AAAA;;AACF,iBAAKhH,WAAL;AACEyC,cAAAA,GAAG,CAAC4D,QAAQ,CAAClD,MAAD,CAAR,GAAmB+D,MAAM,CAACF,CAAD,CAA1B,CAAH;AACA;AAAA;AAAA;;AACF,iBAAK1G,WAAL;AACEmC,cAAAA,GAAG,CAAC4D,QAAQ,CAAClD,MAAD,CAAR,GAAmB,IAAI2B,MAAJ,CAAWkC,CAAX,EAAcC,CAAd,CAApB,CAAH;AACA;AAAA;AAAA;;AACF,iBAAKzG,WAAL;AACEiC,cAAAA,GAAG,CAAC4D,QAAQ,CAAClD,MAAD,CAAR,GAAmBW,MAAM,CAACqD,GAAP,CAAWH,CAAX,CAApB,CAAH;AACA;AAAA;AAAA;;AACF,iBAAKzG,QAAL;AACE,kBAAM6G,MAAM,GAAG,eAAgB,IAAInC,GAAJ,EAA/B;AACAoB,cAAAA,QAAQ,CAAClD,MAAD,CAAR,GAAmBiE,MAAnB;;AACA,mBAAK,IAAI3C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiC,KAAK,CAACzD,MAA1B,EAAkCwB,CAAC,EAAnC;AACEzB,gBAAAA,KAAK,CAAC2D,IAAN,CAAW,CACTD,KAAK,CAACjC,CAAD,CADI,EAET,UAACF,CAAD,EAAO;AACL6C,kBAAAA,MAAM,CAACC,GAAP,CAAW9C,CAAX;AACD,iBAJQ,CAAX;AADF;;AAOA9B,cAAAA,GAAG,CAAC2E,MAAD,CAAH;AACA;AAAA;AAAA;;AACF,iBAAKjH,QAAL;AACE,kBAAMqD,GAAG,GAAG,eAAgB,IAAI4B,GAAJ,EAA5B;AACAiB,cAAAA,QAAQ,CAAClD,MAAD,CAAR,GAAmBK,GAAnB;;AAFF,2CAGWiB,EAHX;AAII,oBAAM6C,CAAC,GAAG,EAAV;AACAtE,gBAAAA,KAAK,CAAC2D,IAAN,CAAW,CACTD,KAAK,CAACjC,EAAC,GAAG,CAAL,CADI,EAET,UAACF,CAAD,EAAO;AACL+C,kBAAAA,CAAC,CAAC,CAAD,CAAD,GAAO/C,CAAP;AACD,iBAJQ,CAAX;AAMAvB,gBAAAA,KAAK,CAAC2D,IAAN,CAAW,CACTD,KAAK,CAACjC,EAAD,CADI,EAET,UAAChB,CAAD,EAAO;AACL6D,kBAAAA,CAAC,CAAC,CAAD,CAAD,GAAO7D,CAAP;AACD,iBAJQ,CAAX;AAMAmD,gBAAAA,OAAO,CAACD,IAAR,CAAa,YAAM;AACjBnD,kBAAAA,GAAG,CAACf,GAAJ,CAAQ6E,CAAC,CAAC,CAAD,CAAT,EAAcA,CAAC,CAAC,CAAD,CAAf;AACD,iBAFD;AAjBJ;;AAGE,mBAAK,IAAI7C,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGiC,KAAK,CAACzD,MAA1B,EAAkCwB,EAAC,IAAI,CAAvC,EAA0C;AAAA,uBAAjCA,EAAiC;AAiBzC;;AACDhC,cAAAA,GAAG,CAACe,GAAD,CAAH;AACA;AAAA;AAAA;;AACF,iBAAKpD,gBAAL;AACE,kBAAMiD,GAAG,GAAG,eAAgBC,MAAM,CAACiE,MAAP,CAAc,IAAd,CAA5B;AACAlB,cAAAA,QAAQ,CAAClD,MAAD,CAAR,GAAmBE,GAAnB;;AAFF,0DAGoBC,MAAM,CAACC,IAAP,CAAYyD,CAAZ,EAAeQ,OAAf,EAHpB;AAAA;;AAAA;AAAA;AAAA,sBAGaC,GAHb;AAII,sBAAMH,CAAC,GAAG,EAAV;AACAtE,kBAAAA,KAAK,CAAC2D,IAAN,CAAW,CACTK,CAAC,CAACS,GAAD,CADQ,EAET,UAAClD,CAAD,EAAO;AACL+C,oBAAAA,CAAC,CAAC,CAAD,CAAD,GAAO/C,CAAP;AACD,mBAJQ,CAAX;AAMAvB,kBAAAA,KAAK,CAAC2D,IAAN,CAAW,CACTrE,MAAM,CAACmF,GAAG,CAACC,KAAJ,CAAU,CAAV,CAAD,CADG,EAET,UAACjE,CAAD,EAAO;AACL6D,oBAAAA,CAAC,CAAC,CAAD,CAAD,GAAO7D,CAAP;AACD,mBAJQ,CAAX;AAMAmD,kBAAAA,OAAO,CAACD,IAAR,CAAa,YAAM;AACjBtD,oBAAAA,GAAG,CAACiE,CAAC,CAAC,CAAD,CAAF,CAAH,GAAYA,CAAC,CAAC,CAAD,CAAb;AACD,mBAFD;AAjBJ;;AAGE,uEAA4C;AAAA;AAiB3C;AApBH;AAAA;AAAA;AAAA;AAAA;;AAqBE7E,cAAAA,GAAG,CAACY,GAAD,CAAH;AACA;AAAA;AAAA;;AACF,iBAAKhD,YAAL;AACE,kBAAIgG,QAAQ,CAACW,CAAD,CAAZ,EAAiB;AACfvE,gBAAAA,GAAG,CAAC4D,QAAQ,CAAClD,MAAD,CAAR,GAAmBkD,QAAQ,CAACW,CAAD,CAA5B,CAAH;AACD,eAFD,MAEO;AACL,oBAAMW,CAAC,GAAG,IAAIhH,QAAJ,EAAV;AACAiC,gBAAAA,QAAQ,CAACoE,CAAD,CAAR,GAAcW,CAAd;AACAlF,gBAAAA,GAAG,CAAC4D,QAAQ,CAAClD,MAAD,CAAR,GAAmBwE,CAAC,CAAC/G,OAAtB,CAAH;AACD;;AACD;AAAA;AAAA;;AACF,iBAAKV,UAAL;AACE,2CAA+BwG,KAA/B;AAAA,kBAASpB,OAAT;AAAA,kBAAkBsC,SAAlB;;AACA,kBAAIjE,KAAK,GAAGiE,SAAS,IAAI5B,SAAb,IAA0BA,SAAS,CAAC4B,SAAD,CAAnC,GAAiD,IAAI5B,SAAS,CAAC4B,SAAD,CAAb,CAAyBtC,OAAzB,CAAjD,GAAqF,IAAIvB,KAAJ,CAAUuB,OAAV,CAAjG;AACAe,cAAAA,QAAQ,CAAClD,MAAD,CAAR,GAAmBQ,KAAnB;AACAlB,cAAAA,GAAG,CAACkB,KAAD,CAAH;AACA;AAAA;AAAA;;AACF,iBAAKjD,sBAAL;AACE+B,cAAAA,GAAG,CAAC4D,QAAQ,CAAClD,MAAD,CAAR,GAAmBkD,QAAQ,CAACW,CAAD,CAA5B,CAAH;AACA;AAAA;AAAA;;AACF;AACE,kBAAI/C,KAAK,CAACD,OAAN,CAAcnB,OAAd,CAAJ,EAA4B;AAAA;AAC1B,sBAAMyE,CAAC,GAAG,EAAV;AACA,sBAAMO,IAAI,GAAGnB,KAAK,CAACgB,KAAN,CAAY,CAAZ,CAAb;;AAF0B,+CAGjBjD,GAHiB;AAIxB,wBAAMF,CAAC,GAAGsD,IAAI,CAACpD,GAAD,CAAd;AACAzB,oBAAAA,KAAK,CAAC2D,IAAN,CAAW,CACTpC,CADS,EAET,UAACuD,EAAD,EAAQ;AACNR,sBAAAA,CAAC,CAAC7C,GAAD,CAAD,GAAOqD,EAAP;AACD,qBAJQ,CAAX;AALwB;;AAG1B,uBAAK,IAAIrD,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGoD,IAAI,CAAC5E,MAAzB,EAAiCwB,GAAC,EAAlC,EAAsC;AAAA,2BAA7BA,GAA6B;AAQrC;;AACDmC,kBAAAA,OAAO,CAACD,IAAR,CAAa,YAAM;AAAA,gEACI9D,OADJ;AAAA;;AAAA;AACjB,6EAA8B;AAAA,4BAAnBsB,MAAmB;AAC5B,4BAAM4D,OAAO,GAAG5D,MAAM,MAAN,UAAOuC,KAAK,CAAC,CAAD,CAAZ,SAAoBY,CAApB,EAAhB;;AACA,4BAAIS,OAAJ,EAAa;AACXtF,0BAAAA,GAAG,CAAC4D,QAAQ,CAAClD,MAAD,CAAR,GAAmB4E,OAAO,CAACrB,KAA5B,CAAH;AACA;AACD;AACF;AAPgB;AAAA;AAAA;AAAA;AAAA;;AAQjB,0BAAM,IAAIF,WAAJ,EAAN;AACD,mBATD;AAUA;AAAA;AAAA;AAAA;AAAA;AAtB0B;;AAAA;AAuB3B;;AACD,oBAAM,IAAIA,WAAJ,EAAN;AArHJ;AAFgC;;AAAA;AAyHjC,OAzHD,MAyHO;AAAA;AACL,cAAMwB,KAAK,GAAG,EAAd;AACA3B,UAAAA,QAAQ,CAAClD,MAAD,CAAR,GAAmB6E,KAAnB;;AAFK,uCAGIvD,CAHJ;AAIH,gBAAMwD,CAAC,GAAGvB,KAAK,CAACjC,CAAD,CAAf;;AACA,gBAAIwD,CAAC,KAAKxI,IAAV,EAAgB;AACduD,cAAAA,KAAK,CAAC2D,IAAN,CAAW,CACTsB,CADS,EAET,UAAC1D,CAAD,EAAO;AACLyD,gBAAAA,KAAK,CAACvD,CAAD,CAAL,GAAWF,CAAX;AACD,eAJQ,CAAX;AAMD;AAZE;;AAGL,eAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiC,KAAK,CAACzD,MAA1B,EAAkCwB,CAAC,EAAnC,EAAuC;AAAA,mBAA9BA,CAA8B;AAUtC;;AACDhC,UAAAA,GAAG,CAACuF,KAAD,CAAH;AACA;AAAA;AAAA;AAfK;;AAAA;AAgBN;AACF,KA3ID,MA2IO;AAAA;AACL,YAAME,MAAM,GAAG,EAAf;AACA7B,QAAAA,QAAQ,CAAClD,MAAD,CAAR,GAAmB+E,MAAnB;;AAFK,oDAGa5E,MAAM,CAACC,IAAP,CAAYmD,KAAZ,EAAmBc,OAAnB,EAHb;AAAA;;AAAA;AAAA;AAAA,gBAGMC,GAHN;AAIH,gBAAMH,CAAC,GAAG,EAAV;AACAtE,YAAAA,KAAK,CAAC2D,IAAN,CAAW,CACTD,KAAK,CAACe,GAAD,CADI,EAET,UAAClD,CAAD,EAAO;AACL+C,cAAAA,CAAC,CAAC,CAAD,CAAD,GAAO/C,CAAP;AACD,aAJQ,CAAX;AAMAvB,YAAAA,KAAK,CAAC2D,IAAN,CAAW,CACTrE,MAAM,CAACmF,GAAG,CAACC,KAAJ,CAAU,CAAV,CAAD,CADG,EAET,UAACjE,CAAD,EAAO;AACL6D,cAAAA,CAAC,CAAC,CAAD,CAAD,GAAO7D,CAAP;AACD,aAJQ,CAAX;AAMAmD,YAAAA,OAAO,CAACD,IAAR,CAAa,YAAM;AACjBuB,cAAAA,MAAM,CAACZ,CAAC,CAAC,CAAD,CAAF,CAAN,GAAeA,CAAC,CAAC,CAAD,CAAhB;AACD,aAFD;AAjBG;;AAGL,iEAAgD;AAAA;AAiB/C;AApBI;AAAA;AAAA;AAAA;AAAA;;AAqBL7E,QAAAA,GAAG,CAACyF,MAAD,CAAH;AACA;AAAA;AAAA;AAtBK;;AAAA;AAuBN;AA9MmB;;AAYtB,SAAOlF,KAAK,CAACC,MAAN,GAAe,CAAtB,EAAyB;AAAA;;AAAA,6BAiMrB;AAEH;;AACD,SAAO2D,OAAO,CAAC3D,MAAR,GAAiB,CAAxB,EAA2B;AACzB2D,IAAAA,OAAO,CAAC/E,GAAR;AACD;;AACD,SAAO2C,MAAP;AACD,C,CAED;;;SACe/C,M;;;;;qEAAf,kBAAsB0G,QAAtB,EAAgCC,OAAhC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBACsBA,OADtB,aACsBA,OADtB,cACsBA,OADtB,GACiC,EADjC,EACUvF,OADV,SACUA,OADV;AAEQwF,YAAAA,IAFR,GAEe,IAAI1H,QAAJ,EAFf;AAGQ2H,YAAAA,MAHR,GAGiBH,QAAQ,CAACI,WAAT,CAAqBvH,4BAA4B,EAAjD,EAAqDwH,SAArD,EAHjB;AAIQvH,YAAAA,OAJR,GAIkB;AACdqF,cAAAA,MAAM,EAAE,EADM;AAEdD,cAAAA,QAAQ,EAAE,EAFI;AAGdzD,cAAAA,QAAQ,EAAE,EAHI;AAIdC,cAAAA,OAAO,EAAPA;AAJc,aAJlB;AAAA;AAAA,mBAUwB4F,aAAa,CAAC9F,IAAd,CAAmB1B,OAAnB,EAA4BqH,MAA5B,CAVxB;;AAAA;AAUQI,YAAAA,OAVR;AAWMC,YAAAA,WAXN,GAWoBN,IAAI,CAACzH,OAXzB;;AAYE,gBAAI8H,OAAO,CAACL,IAAZ,EAAkB;AAChBA,cAAAA,IAAI,CAACvH,OAAL;AACD,aAFD,MAEO;AACL6H,cAAAA,WAAW,GAAGC,cAAc,CAACjG,IAAf,CAAoB1B,OAApB,EAA6BqH,MAA7B,EAAqCO,IAArC,CAA0CR,IAAI,CAACvH,OAA/C,EAAwDgI,KAAxD,CAA8D,UAACC,MAAD,EAAY;AACtF,mDAAuBzF,MAAM,CAACgD,MAAP,CAAcrF,OAAO,CAAC2B,QAAtB,CAAvB,sCAAwD;AAAnD,sBAAMA,QAAQ,sBAAd;AACHA,kBAAAA,QAAQ,CAAC7B,MAAT,CAAgBgI,MAAhB;AACD;;AACDV,gBAAAA,IAAI,CAACtH,MAAL,CAAYgI,MAAZ;AACD,eALa,CAAd;AAMD;;AArBH,8CAsBS;AACLV,cAAAA,IAAI,EAAEM,WAAW,CAACE,IAAZ,CAAiB;AAAA,uBAAMP,MAAM,CAACU,MAAb;AAAA,eAAjB,CADD;AAELtC,cAAAA,KAAK,EAAEgC,OAAO,CAAChC;AAFV,aAtBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SA2Be+B,a;;;;;4EAAf,kBAA6BH,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACqBA,MAAM,CAACW,IAAP,EADrB;;AAAA;AACQA,YAAAA,IADR;;AAAA,gBAEOA,IAAI,CAACvC,KAFZ;AAAA;AAAA;AAAA;;AAAA,kBAGU,IAAIF,WAAJ,EAHV;;AAAA;AAAA;AAOI0C,YAAAA,IAAI,GAAGtF,IAAI,CAACuF,KAAL,CAAWF,IAAI,CAACvC,KAAhB,CAAP;AAPJ;AAAA;;AAAA;AAAA;AAAA;AAAA,kBASU,IAAIF,WAAJ,EATV;;AAAA;AAAA,8CAWS;AACL6B,cAAAA,IAAI,EAAEY,IAAI,CAACZ,IADN;AAEL3B,cAAAA,KAAK,EAAEP,SAAS,CAACxD,IAAV,CAAe,IAAf,EAAqBuG,IAArB;AAFF,aAXT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAgBeN,c;;;;;6EAAf,kBAA8BN,MAA9B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACmBA,MAAM,CAACW,IAAP,EADnB;;AAAA;AACMA,YAAAA,IADN;;AAAA;AAAA,gBAEUA,IAAI,CAACZ,IAFf;AAAA;AAAA;AAAA;;AAAA,gBAGSY,IAAI,CAACvC,KAHd;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAKUwC,YAAAA,IALV,GAKiBD,IAAI,CAACvC,KALtB;AAAA,2BAMYwC,IAAI,CAAC,CAAD,CANhB;AAAA,8CAOW7I,YAPX,yBAyBWH,UAzBX;AAAA;;AAAA;AAQckJ,YAAAA,UARd,GAQ2BF,IAAI,CAACG,OAAL,CAAa,GAAb,CAR3B;AAScC,YAAAA,UATd,GAS2BhH,MAAM,CAAC4G,IAAI,CAACxB,KAAL,CAAW,CAAX,EAAc0B,UAAd,CAAD,CATjC;AAUcxG,YAAAA,QAVd,GAUyB,KAAKA,QAAL,CAAc0G,UAAd,CAVzB;;AAAA,gBAWa1G,QAXb;AAAA;AAAA;AAAA;;AAAA,kBAYgB,IAAImB,KAAJ,uBAAyBuF,UAAzB,0BAZhB;;AAAA;AAccC,YAAAA,QAdd,GAcyBL,IAAI,CAACxB,KAAL,CAAW0B,UAAU,GAAG,CAAxB,CAdzB;AAeYI,YAAAA,QAfZ;AAAA;AAiBUA,YAAAA,QAAQ,GAAG5F,IAAI,CAACuF,KAAL,CAAWI,QAAX,CAAX;AAjBV;AAAA;;AAAA;AAAA;AAAA;AAAA,kBAmBgB,IAAI/C,WAAJ,EAnBhB;;AAAA;AAqBcE,YAAAA,KArBd,GAqBsBP,SAAS,CAACxD,IAAV,CAAe,IAAf,EAAqB6G,QAArB,CArBtB;AAsBQ5G,YAAAA,QAAQ,CAAC9B,OAAT,CAAiB4F,KAAjB;AAtBR;;AAAA;AA0Bc0C,YAAAA,WA1Bd,GA0B2BF,IAAI,CAACG,OAAL,CAAa,GAAb,CA1B3B;AA2BcC,YAAAA,WA3Bd,GA2B2BhH,MAAM,CAAC4G,IAAI,CAACxB,KAAL,CAAW,CAAX,EAAc0B,WAAd,CAAD,CA3BjC;AA4BcxG,YAAAA,SA5Bd,GA4ByB,KAAKA,QAAL,CAAc0G,WAAd,CA5BzB;;AAAA,gBA6Ba1G,SA7Bb;AAAA;AAAA;AAAA;;AAAA,kBA8BgB,IAAImB,KAAJ,uBAAyBuF,WAAzB,0BA9BhB;;AAAA;AAgCcC,YAAAA,SAhCd,GAgCyBL,IAAI,CAACxB,KAAL,CAAW0B,WAAU,GAAG,CAAxB,CAhCzB;AAiCYI,YAAAA,SAjCZ;AAAA;AAmCUA,YAAAA,SAAQ,GAAG5F,IAAI,CAACuF,KAAL,CAAWI,SAAX,CAAX;AAnCV;AAAA;;AAAA;AAAA;AAAA;AAAA,kBAqCgB,IAAI/C,WAAJ,EArChB;;AAAA;AAuCcE,YAAAA,OAvCd,GAuCsBP,SAAS,CAACxD,IAAV,CAAe,IAAf,EAAqB6G,SAArB,CAvCtB;;AAwCQ5G,YAAAA,SAAQ,CAAC7B,MAAT,CAAgB2F,OAAhB;;AAxCR;;AAAA;AAAA,kBA4Cc,IAAIF,WAAJ,EA5Cd;;AAAA;AAAA;AAAA,mBA8CiB8B,MAAM,CAACW,IAAP,EA9CjB;;AAAA;AA8CIA,YAAAA,IA9CJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAiDA,SAASQ,MAAT,CAAgBvH,KAAhB,EAAuBkG,OAAvB,EAAgC;AAC9B,cAAyCA,OAAzC,aAAyCA,OAAzC,cAAyCA,OAAzC,GAAoD,EAApD;AAAA,MAAQvF,OAAR,SAAQA,OAAR;AAAA,MAAiBC,WAAjB,SAAiBA,WAAjB;AAAA,MAA8B4G,MAA9B,SAA8BA,MAA9B;;AACA,MAAMC,OAAO,GAAG;AACd/G,IAAAA,QAAQ,EAAE,EADI;AAEdJ,IAAAA,KAAK,EAAE,CAFO;AAGdL,IAAAA,OAAO,EAAE,eAAgB,IAAIiD,GAAJ,EAHX;AAIdrC,IAAAA,WAAW,EAAE,EAJC;AAKdF,IAAAA,OAAO,EAAPA,OALc;AAMdC,IAAAA,WAAW,EAAXA,WANc;AAOd4G,IAAAA,MAAM,EAANA;AAPc,GAAhB;AASA,MAAME,WAAW,GAAG,IAAIC,WAAJ,EAApB;AACA,MAAIC,aAAa,GAAG,CAApB;AACA,MAAM3B,QAAQ,GAAG,IAAI4B,cAAJ,CAAmB;AAC5BC,IAAAA,KAD4B,iBACtBzI,UADsB,EACV;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAChB0I,gBAAAA,EADgB,GACXhI,OAAO,CAACU,IAAR,CAAagH,OAAb,EAAsBzH,KAAtB,CADW;;AAAA,qBAElB+B,KAAK,CAACD,OAAN,CAAciG,EAAd,CAFkB;AAAA;AAAA;AAAA;;AAAA,sBAGd,IAAIlG,KAAJ,CAAU,0BAAV,CAHc;;AAAA;AAKtB,oBAAIkG,EAAE,GAAG,CAAT,EAAY;AACV1I,kBAAAA,UAAU,CAACQ,OAAX,CAAmB6H,WAAW,CAACH,MAAZ,WAAsBQ,EAAtB,QAAnB;AAED,iBAHD,MAGO;AACL1I,kBAAAA,UAAU,CAACQ,OAAX,CACE6H,WAAW,CAACH,MAAZ,YAAuBE,OAAO,CAAC5G,WAAR,CAAoBW,IAApB,CAAyB,GAAzB,CAAvB,SADF;AAIAoG,kBAAAA,aAAa,GAAGH,OAAO,CAAC5G,WAAR,CAAoBE,MAApB,GAA6B,CAA7C;AACD;;AACKiH,gBAAAA,YAfgB,GAeD,eAAgB,IAAIC,OAAJ,EAff;;AAAA;AAAA,sBAgBf7G,MAAM,CAACC,IAAP,CAAYoG,OAAO,CAAC/G,QAApB,EAA8BK,MAA9B,GAAuC,CAhBxB;AAAA;AAAA;AAAA;;AAAA;AAiBf;AAAA,sBAAOqG,UAAP;AAAA,sBAAmB1G,QAAnB;;AACH,sBAAIsH,YAAY,CAACE,GAAb,CAAiBxH,QAAjB,CAAJ,EACE;AACFsH,kBAAAA,YAAY,CAAC7C,GAAb,CACEsC,OAAO,CAAC/G,QAAR,CAAiBN,MAAM,CAACgH,UAAD,CAAvB,IAAuCe,UAAU,CAC/CzH,QAD+C,EAE/C+G,OAAO,CAACD,MAFuC,CAAV,CAGrCb,IAHqC,CAIrC,UAACyB,QAAD,EAAc;AACZ,wBAAMC,GAAG,GAAGtI,OAAO,CAACU,IAAR,CAAagH,OAAb,EAAsBW,QAAtB,CAAZ;;AACA,wBAAIrG,KAAK,CAACD,OAAN,CAAcuG,GAAd,CAAJ,EAAwB;AACtBhJ,sBAAAA,UAAU,CAACQ,OAAX,CACE6H,WAAW,CAACH,MAAZ,WACKpJ,YADL,SACoBiJ,UADpB,kBACqC5I,sBADrC,gBACgE6J,GAAG,CAAC,CAAD,CADnE,UADF;AAMAZ,sBAAAA,OAAO,CAACnH,KAAR;AACAsH,sBAAAA,aAAa;AACd,qBATD,MASO,IAAIS,GAAG,GAAG,CAAV,EAAa;AAClBhJ,sBAAAA,UAAU,CAACQ,OAAX,CACE6H,WAAW,CAACH,MAAZ,WAAsBpJ,YAAtB,SAAqCiJ,UAArC,cAAmDiB,GAAnD,QADF;AAID,qBALM,MAKA;AACL,0BAAMjE,MAAM,GAAGqD,OAAO,CAAC5G,WAAR,CAAoB2E,KAApB,CAA0BoC,aAAa,GAAG,CAA1C,EAA6CpG,IAA7C,CAAkD,GAAlD,CAAf;AACAnC,sBAAAA,UAAU,CAACQ,OAAX,CACE6H,WAAW,CAACH,MAAZ,WACKpJ,YADL,SACoBiJ,UADpB,eACmChD,MADnC,SADF;AAMAwD,sBAAAA,aAAa,GAAGH,OAAO,CAAC5G,WAAR,CAAoBE,MAApB,GAA6B,CAA7C;AACD;AACF,mBA9BoC,EA+BrC,UAAC8F,MAAD,EAAY;AACV,wBAAI,CAACA,MAAD,IAAW,OAAOA,MAAP,KAAkB,QAA7B,IAAyC,EAAEA,MAAM,YAAYhF,KAApB,CAA7C,EAAyE;AACvEgF,sBAAAA,MAAM,GAAG,IAAIhF,KAAJ,CAAU,2BAAV,CAAT;AACD;;AACD,wBAAMwG,GAAG,GAAGtI,OAAO,CAACU,IAAR,CAAagH,OAAb,EAAsBZ,MAAtB,CAAZ;;AACA,wBAAI9E,KAAK,CAACD,OAAN,CAAcuG,GAAd,CAAJ,EAAwB;AACtBhJ,sBAAAA,UAAU,CAACQ,OAAX,CACE6H,WAAW,CAACH,MAAZ,WACKvJ,UADL,SACkBoJ,UADlB,kBACmC5I,sBADnC,gBAC8D6J,GAAG,CAAC,CAAD,CADjE,UADF;AAMAZ,sBAAAA,OAAO,CAACnH,KAAR;AACAsH,sBAAAA,aAAa;AACd,qBATD,MASO,IAAIS,GAAG,GAAG,CAAV,EAAa;AAClBhJ,sBAAAA,UAAU,CAACQ,OAAX,CACE6H,WAAW,CAACH,MAAZ,WAAsBvJ,UAAtB,SAAmCoJ,UAAnC,cAAiDiB,GAAjD,QADF;AAID,qBALM,MAKA;AACL,0BAAMjE,MAAM,GAAGqD,OAAO,CAAC5G,WAAR,CAAoB2E,KAApB,CAA0BoC,aAAa,GAAG,CAA1C,EAA6CpG,IAA7C,CAAkD,GAAlD,CAAf;AACAnC,sBAAAA,UAAU,CAACQ,OAAX,CACE6H,WAAW,CAACH,MAAZ,WACKvJ,UADL,SACkBoJ,UADlB,eACiChD,MADjC,SADF;AAMAwD,sBAAAA,aAAa,GAAGH,OAAO,CAAC5G,WAAR,CAAoBE,MAApB,GAA6B,CAA7C;AACD;AACF,mBA5DoC,EA6DrCuH,OA7DqC,CA6D7B,YAAM;AACd,2BAAOb,OAAO,CAAC/G,QAAR,CAAiBN,MAAM,CAACgH,UAAD,CAAvB,CAAP;AACD,mBA/DsC,CADzC;AApBkB;;AAAA,2CAiBiBhG,MAAM,CAACmH,OAAP,CAAed,OAAO,CAAC/G,QAAvB,CAjBjB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAuFd/B,OAAO,CAAC6J,IAAR,CAAapH,MAAM,CAACgD,MAAP,CAAcqD,OAAO,CAAC/G,QAAtB,CAAb,CAvFc;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAyFhB/B,OAAO,CAAC8J,GAAR,CAAYrH,MAAM,CAACgD,MAAP,CAAcqD,OAAO,CAAC/G,QAAtB,CAAZ,CAzFgB;;AAAA;AA0FtBrB,gBAAAA,UAAU,CAACqJ,KAAX;;AA1FsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2FvB;AA5FiC,GAAnB,CAAjB;AA8FA,SAAOzC,QAAP;AACD;;AACD,SAASkC,UAAT,CAAoBzJ,OAApB,EAA6B8I,MAA7B,EAAqC;AACnC,MAAI,CAACA,MAAL,EACE,OAAO9I,OAAP;AACF,MAAI8I,MAAM,CAACmB,OAAX,EACE,OAAOhK,OAAO,CAACE,MAAR,CAAe2I,MAAM,CAACX,MAAP,IAAiB,IAAIhF,KAAJ,CAAU,qBAAV,CAAhC,CAAP;AACF,MAAM+G,KAAK,GAAG,IAAIjK,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C2I,IAAAA,MAAM,CAACqB,gBAAP,CAAwB,OAAxB,EAAiC,UAACC,KAAD,EAAW;AAC1CjK,MAAAA,MAAM,CAAC2I,MAAM,CAACX,MAAP,IAAiB,IAAIhF,KAAJ,CAAU,qBAAV,CAAlB,CAAN;AACD,KAFD;AAGAnD,IAAAA,OAAO,CAACiI,IAAR,CAAa/H,OAAb,EAAsBgI,KAAtB,CAA4B/H,MAA5B;AACD,GALa,CAAd;AAMA+J,EAAAA,KAAK,CAAChC,KAAN,CAAY,YAAM,CACjB,CADD;AAEA,SAAOjI,OAAO,CAAC6J,IAAR,CAAa,CAACI,KAAD,EAAQlK,OAAR,CAAb,CAAP;AACD;;AACD,SACEa,MADF,EAEEgI,MAFF","sourcesContent":["// src/utils.ts\nvar HOLE = -1;\nvar NAN = -2;\nvar NEGATIVE_INFINITY = -3;\nvar NEGATIVE_ZERO = -4;\nvar NULL = -5;\nvar POSITIVE_INFINITY = -6;\nvar UNDEFINED = -7;\nvar TYPE_BIGINT = \"B\";\nvar TYPE_DATE = \"D\";\nvar TYPE_ERROR = \"E\";\nvar TYPE_MAP = \"M\";\nvar TYPE_NULL_OBJECT = \"N\";\nvar TYPE_PROMISE = \"P\";\nvar TYPE_REGEXP = \"R\";\nvar TYPE_SET = \"S\";\nvar TYPE_SYMBOL = \"Y\";\nvar TYPE_URL = \"U\";\nvar TYPE_PREVIOUS_RESOLVED = \"Z\";\nvar Deferred = class {\n  promise;\n  resolve;\n  reject;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n  }\n};\nfunction createLineSplittingTransform() {\n  const decoder = new TextDecoder();\n  let leftover = \"\";\n  return new TransformStream({\n    transform(chunk, controller) {\n      const str = decoder.decode(chunk, { stream: true });\n      const parts = (leftover + str).split(\"\\n\");\n      leftover = parts.pop() || \"\";\n      for (const part of parts) {\n        controller.enqueue(part);\n      }\n    },\n    flush(controller) {\n      if (leftover) {\n        controller.enqueue(leftover);\n      }\n    }\n  });\n}\n\n// src/flatten.ts\nfunction flatten(input) {\n  const { indices } = this;\n  const existing = indices.get(input);\n  if (existing)\n    return [existing];\n  if (input === void 0)\n    return UNDEFINED;\n  if (input === null)\n    return NULL;\n  if (Number.isNaN(input))\n    return NAN;\n  if (input === Number.POSITIVE_INFINITY)\n    return POSITIVE_INFINITY;\n  if (input === Number.NEGATIVE_INFINITY)\n    return NEGATIVE_INFINITY;\n  if (input === 0 && 1 / input < 0)\n    return NEGATIVE_ZERO;\n  const index = this.index++;\n  indices.set(input, index);\n  stringify.call(this, input, index);\n  return index;\n}\nfunction stringify(input, index) {\n  const { deferred, plugins, postPlugins } = this;\n  const str = this.stringified;\n  const stack = [[input, index]];\n  while (stack.length > 0) {\n    const [input2, index2] = stack.pop();\n    const partsForObj = (obj) => Object.keys(obj).map((k) => `\"_${flatten.call(this, k)}\":${flatten.call(this, obj[k])}`).join(\",\");\n    let error = null;\n    switch (typeof input2) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        str[index2] = JSON.stringify(input2);\n        break;\n      case \"bigint\":\n        str[index2] = `[\"${TYPE_BIGINT}\",\"${input2}\"]`;\n        break;\n      case \"symbol\": {\n        const keyFor = Symbol.keyFor(input2);\n        if (!keyFor) {\n          error = new Error(\n            \"Cannot encode symbol unless created with Symbol.for()\"\n          );\n        } else {\n          str[index2] = `[\"${TYPE_SYMBOL}\",${JSON.stringify(keyFor)}]`;\n        }\n        break;\n      }\n      case \"object\": {\n        if (!input2) {\n          str[index2] = `${NULL}`;\n          break;\n        }\n        const isArray = Array.isArray(input2);\n        let pluginHandled = false;\n        if (!isArray && plugins) {\n          for (const plugin of plugins) {\n            const pluginResult = plugin(input2);\n            if (Array.isArray(pluginResult)) {\n              pluginHandled = true;\n              const [pluginIdentifier, ...rest] = pluginResult;\n              str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n              if (rest.length > 0) {\n                str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n              }\n              str[index2] += \"]\";\n              break;\n            }\n          }\n        }\n        if (!pluginHandled) {\n          let result = isArray ? \"[\" : \"{\";\n          if (isArray) {\n            for (let i = 0; i < input2.length; i++)\n              result += (i ? \",\" : \"\") + (i in input2 ? flatten.call(this, input2[i]) : HOLE);\n            str[index2] = `${result}]`;\n          } else if (input2 instanceof Date) {\n            str[index2] = `[\"${TYPE_DATE}\",${input2.getTime()}]`;\n          } else if (input2 instanceof URL) {\n            str[index2] = `[\"${TYPE_URL}\",${JSON.stringify(input2.href)}]`;\n          } else if (input2 instanceof RegExp) {\n            str[index2] = `[\"${TYPE_REGEXP}\",${JSON.stringify(\n              input2.source\n            )},${JSON.stringify(input2.flags)}]`;\n          } else if (input2 instanceof Set) {\n            if (input2.size > 0) {\n              str[index2] = `[\"${TYPE_SET}\",${[...input2].map((val) => flatten.call(this, val)).join(\",\")}]`;\n            } else {\n              str[index2] = `[\"${TYPE_SET}\"]`;\n            }\n          } else if (input2 instanceof Map) {\n            if (input2.size > 0) {\n              str[index2] = `[\"${TYPE_MAP}\",${[...input2].flatMap(([k, v]) => [\n                flatten.call(this, k),\n                flatten.call(this, v)\n              ]).join(\",\")}]`;\n            } else {\n              str[index2] = `[\"${TYPE_MAP}\"]`;\n            }\n          } else if (input2 instanceof Promise) {\n            str[index2] = `[\"${TYPE_PROMISE}\",${index2}]`;\n            deferred[index2] = input2;\n          } else if (input2 instanceof Error) {\n            str[index2] = `[\"${TYPE_ERROR}\",${JSON.stringify(input2.message)}`;\n            if (input2.name !== \"Error\") {\n              str[index2] += `,${JSON.stringify(input2.name)}`;\n            }\n            str[index2] += \"]\";\n          } else if (Object.getPrototypeOf(input2) === null) {\n            str[index2] = `[\"${TYPE_NULL_OBJECT}\",{${partsForObj(input2)}}]`;\n          } else if (isPlainObject(input2)) {\n            str[index2] = `{${partsForObj(input2)}}`;\n          } else {\n            error = new Error(\"Cannot encode object with prototype\");\n          }\n        }\n        break;\n      }\n      default: {\n        const isArray = Array.isArray(input2);\n        let pluginHandled = false;\n        if (!isArray && plugins) {\n          for (const plugin of plugins) {\n            const pluginResult = plugin(input2);\n            if (Array.isArray(pluginResult)) {\n              pluginHandled = true;\n              const [pluginIdentifier, ...rest] = pluginResult;\n              str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n              if (rest.length > 0) {\n                str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n              }\n              str[index2] += \"]\";\n              break;\n            }\n          }\n        }\n        if (!pluginHandled) {\n          error = new Error(\"Cannot encode function or unexpected type\");\n        }\n      }\n    }\n    if (error) {\n      let pluginHandled = false;\n      if (postPlugins) {\n        for (const plugin of postPlugins) {\n          const pluginResult = plugin(input2);\n          if (Array.isArray(pluginResult)) {\n            pluginHandled = true;\n            const [pluginIdentifier, ...rest] = pluginResult;\n            str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n            if (rest.length > 0) {\n              str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n            }\n            str[index2] += \"]\";\n            break;\n          }\n        }\n      }\n      if (!pluginHandled) {\n        throw error;\n      }\n    }\n  }\n}\nvar objectProtoNames = Object.getOwnPropertyNames(Object.prototype).sort().join(\"\\0\");\nfunction isPlainObject(thing) {\n  const proto = Object.getPrototypeOf(thing);\n  return proto === Object.prototype || proto === null || Object.getOwnPropertyNames(proto).sort().join(\"\\0\") === objectProtoNames;\n}\n\n// src/unflatten.ts\nvar globalObj = typeof window !== \"undefined\" ? window : typeof globalThis !== \"undefined\" ? globalThis : void 0;\nfunction unflatten(parsed) {\n  const { hydrated, values } = this;\n  if (typeof parsed === \"number\")\n    return hydrate.call(this, parsed);\n  if (!Array.isArray(parsed) || !parsed.length)\n    throw new SyntaxError();\n  const startIndex = values.length;\n  for (const value of parsed) {\n    values.push(value);\n  }\n  hydrated.length = values.length;\n  return hydrate.call(this, startIndex);\n}\nfunction hydrate(index) {\n  const { hydrated, values, deferred, plugins } = this;\n  let result;\n  const stack = [\n    [\n      index,\n      (v) => {\n        result = v;\n      }\n    ]\n  ];\n  let postRun = [];\n  while (stack.length > 0) {\n    const [index2, set] = stack.pop();\n    switch (index2) {\n      case UNDEFINED:\n        set(void 0);\n        continue;\n      case NULL:\n        set(null);\n        continue;\n      case NAN:\n        set(NaN);\n        continue;\n      case POSITIVE_INFINITY:\n        set(Infinity);\n        continue;\n      case NEGATIVE_INFINITY:\n        set(-Infinity);\n        continue;\n      case NEGATIVE_ZERO:\n        set(-0);\n        continue;\n    }\n    if (hydrated[index2]) {\n      set(hydrated[index2]);\n      continue;\n    }\n    const value = values[index2];\n    if (!value || typeof value !== \"object\") {\n      hydrated[index2] = value;\n      set(value);\n      continue;\n    }\n    if (Array.isArray(value)) {\n      if (typeof value[0] === \"string\") {\n        const [type, b, c] = value;\n        switch (type) {\n          case TYPE_DATE:\n            set(hydrated[index2] = new Date(b));\n            continue;\n          case TYPE_URL:\n            set(hydrated[index2] = new URL(b));\n            continue;\n          case TYPE_BIGINT:\n            set(hydrated[index2] = BigInt(b));\n            continue;\n          case TYPE_REGEXP:\n            set(hydrated[index2] = new RegExp(b, c));\n            continue;\n          case TYPE_SYMBOL:\n            set(hydrated[index2] = Symbol.for(b));\n            continue;\n          case TYPE_SET:\n            const newSet = /* @__PURE__ */ new Set();\n            hydrated[index2] = newSet;\n            for (let i = 1; i < value.length; i++)\n              stack.push([\n                value[i],\n                (v) => {\n                  newSet.add(v);\n                }\n              ]);\n            set(newSet);\n            continue;\n          case TYPE_MAP:\n            const map = /* @__PURE__ */ new Map();\n            hydrated[index2] = map;\n            for (let i = 1; i < value.length; i += 2) {\n              const r = [];\n              stack.push([\n                value[i + 1],\n                (v) => {\n                  r[1] = v;\n                }\n              ]);\n              stack.push([\n                value[i],\n                (k) => {\n                  r[0] = k;\n                }\n              ]);\n              postRun.push(() => {\n                map.set(r[0], r[1]);\n              });\n            }\n            set(map);\n            continue;\n          case TYPE_NULL_OBJECT:\n            const obj = /* @__PURE__ */ Object.create(null);\n            hydrated[index2] = obj;\n            for (const key of Object.keys(b).reverse()) {\n              const r = [];\n              stack.push([\n                b[key],\n                (v) => {\n                  r[1] = v;\n                }\n              ]);\n              stack.push([\n                Number(key.slice(1)),\n                (k) => {\n                  r[0] = k;\n                }\n              ]);\n              postRun.push(() => {\n                obj[r[0]] = r[1];\n              });\n            }\n            set(obj);\n            continue;\n          case TYPE_PROMISE:\n            if (hydrated[b]) {\n              set(hydrated[index2] = hydrated[b]);\n            } else {\n              const d = new Deferred();\n              deferred[b] = d;\n              set(hydrated[index2] = d.promise);\n            }\n            continue;\n          case TYPE_ERROR:\n            const [, message, errorType] = value;\n            let error = errorType && globalObj && globalObj[errorType] ? new globalObj[errorType](message) : new Error(message);\n            hydrated[index2] = error;\n            set(error);\n            continue;\n          case TYPE_PREVIOUS_RESOLVED:\n            set(hydrated[index2] = hydrated[b]);\n            continue;\n          default:\n            if (Array.isArray(plugins)) {\n              const r = [];\n              const vals = value.slice(1);\n              for (let i = 0; i < vals.length; i++) {\n                const v = vals[i];\n                stack.push([\n                  v,\n                  (v2) => {\n                    r[i] = v2;\n                  }\n                ]);\n              }\n              postRun.push(() => {\n                for (const plugin of plugins) {\n                  const result2 = plugin(value[0], ...r);\n                  if (result2) {\n                    set(hydrated[index2] = result2.value);\n                    return;\n                  }\n                }\n                throw new SyntaxError();\n              });\n              continue;\n            }\n            throw new SyntaxError();\n        }\n      } else {\n        const array = [];\n        hydrated[index2] = array;\n        for (let i = 0; i < value.length; i++) {\n          const n = value[i];\n          if (n !== HOLE) {\n            stack.push([\n              n,\n              (v) => {\n                array[i] = v;\n              }\n            ]);\n          }\n        }\n        set(array);\n        continue;\n      }\n    } else {\n      const object = {};\n      hydrated[index2] = object;\n      for (const key of Object.keys(value).reverse()) {\n        const r = [];\n        stack.push([\n          value[key],\n          (v) => {\n            r[1] = v;\n          }\n        ]);\n        stack.push([\n          Number(key.slice(1)),\n          (k) => {\n            r[0] = k;\n          }\n        ]);\n        postRun.push(() => {\n          object[r[0]] = r[1];\n        });\n      }\n      set(object);\n      continue;\n    }\n  }\n  while (postRun.length > 0) {\n    postRun.pop()();\n  }\n  return result;\n}\n\n// src/turbo-stream.ts\nasync function decode(readable, options) {\n  const { plugins } = options ?? {};\n  const done = new Deferred();\n  const reader = readable.pipeThrough(createLineSplittingTransform()).getReader();\n  const decoder = {\n    values: [],\n    hydrated: [],\n    deferred: {},\n    plugins\n  };\n  const decoded = await decodeInitial.call(decoder, reader);\n  let donePromise = done.promise;\n  if (decoded.done) {\n    done.resolve();\n  } else {\n    donePromise = decodeDeferred.call(decoder, reader).then(done.resolve).catch((reason) => {\n      for (const deferred of Object.values(decoder.deferred)) {\n        deferred.reject(reason);\n      }\n      done.reject(reason);\n    });\n  }\n  return {\n    done: donePromise.then(() => reader.closed),\n    value: decoded.value\n  };\n}\nasync function decodeInitial(reader) {\n  const read = await reader.read();\n  if (!read.value) {\n    throw new SyntaxError();\n  }\n  let line;\n  try {\n    line = JSON.parse(read.value);\n  } catch (reason) {\n    throw new SyntaxError();\n  }\n  return {\n    done: read.done,\n    value: unflatten.call(this, line)\n  };\n}\nasync function decodeDeferred(reader) {\n  let read = await reader.read();\n  while (!read.done) {\n    if (!read.value)\n      continue;\n    const line = read.value;\n    switch (line[0]) {\n      case TYPE_PROMISE: {\n        const colonIndex = line.indexOf(\":\");\n        const deferredId = Number(line.slice(1, colonIndex));\n        const deferred = this.deferred[deferredId];\n        if (!deferred) {\n          throw new Error(`Deferred ID ${deferredId} not found in stream`);\n        }\n        const lineData = line.slice(colonIndex + 1);\n        let jsonLine;\n        try {\n          jsonLine = JSON.parse(lineData);\n        } catch (reason) {\n          throw new SyntaxError();\n        }\n        const value = unflatten.call(this, jsonLine);\n        deferred.resolve(value);\n        break;\n      }\n      case TYPE_ERROR: {\n        const colonIndex = line.indexOf(\":\");\n        const deferredId = Number(line.slice(1, colonIndex));\n        const deferred = this.deferred[deferredId];\n        if (!deferred) {\n          throw new Error(`Deferred ID ${deferredId} not found in stream`);\n        }\n        const lineData = line.slice(colonIndex + 1);\n        let jsonLine;\n        try {\n          jsonLine = JSON.parse(lineData);\n        } catch (reason) {\n          throw new SyntaxError();\n        }\n        const value = unflatten.call(this, jsonLine);\n        deferred.reject(value);\n        break;\n      }\n      default:\n        throw new SyntaxError();\n    }\n    read = await reader.read();\n  }\n}\nfunction encode(input, options) {\n  const { plugins, postPlugins, signal } = options ?? {};\n  const encoder = {\n    deferred: {},\n    index: 0,\n    indices: /* @__PURE__ */ new Map(),\n    stringified: [],\n    plugins,\n    postPlugins,\n    signal\n  };\n  const textEncoder = new TextEncoder();\n  let lastSentIndex = 0;\n  const readable = new ReadableStream({\n    async start(controller) {\n      const id = flatten.call(encoder, input);\n      if (Array.isArray(id)) {\n        throw new Error(\"This should never happen\");\n      }\n      if (id < 0) {\n        controller.enqueue(textEncoder.encode(`${id}\n`));\n      } else {\n        controller.enqueue(\n          textEncoder.encode(`[${encoder.stringified.join(\",\")}]\n`)\n        );\n        lastSentIndex = encoder.stringified.length - 1;\n      }\n      const seenPromises = /* @__PURE__ */ new WeakSet();\n      while (Object.keys(encoder.deferred).length > 0) {\n        for (const [deferredId, deferred] of Object.entries(encoder.deferred)) {\n          if (seenPromises.has(deferred))\n            continue;\n          seenPromises.add(\n            encoder.deferred[Number(deferredId)] = raceSignal(\n              deferred,\n              encoder.signal\n            ).then(\n              (resolved) => {\n                const id2 = flatten.call(encoder, resolved);\n                if (Array.isArray(id2)) {\n                  controller.enqueue(\n                    textEncoder.encode(\n                      `${TYPE_PROMISE}${deferredId}:[[\"${TYPE_PREVIOUS_RESOLVED}\",${id2[0]}]]\n`\n                    )\n                  );\n                  encoder.index++;\n                  lastSentIndex++;\n                } else if (id2 < 0) {\n                  controller.enqueue(\n                    textEncoder.encode(`${TYPE_PROMISE}${deferredId}:${id2}\n`)\n                  );\n                } else {\n                  const values = encoder.stringified.slice(lastSentIndex + 1).join(\",\");\n                  controller.enqueue(\n                    textEncoder.encode(\n                      `${TYPE_PROMISE}${deferredId}:[${values}]\n`\n                    )\n                  );\n                  lastSentIndex = encoder.stringified.length - 1;\n                }\n              },\n              (reason) => {\n                if (!reason || typeof reason !== \"object\" || !(reason instanceof Error)) {\n                  reason = new Error(\"An unknown error occurred\");\n                }\n                const id2 = flatten.call(encoder, reason);\n                if (Array.isArray(id2)) {\n                  controller.enqueue(\n                    textEncoder.encode(\n                      `${TYPE_ERROR}${deferredId}:[[\"${TYPE_PREVIOUS_RESOLVED}\",${id2[0]}]]\n`\n                    )\n                  );\n                  encoder.index++;\n                  lastSentIndex++;\n                } else if (id2 < 0) {\n                  controller.enqueue(\n                    textEncoder.encode(`${TYPE_ERROR}${deferredId}:${id2}\n`)\n                  );\n                } else {\n                  const values = encoder.stringified.slice(lastSentIndex + 1).join(\",\");\n                  controller.enqueue(\n                    textEncoder.encode(\n                      `${TYPE_ERROR}${deferredId}:[${values}]\n`\n                    )\n                  );\n                  lastSentIndex = encoder.stringified.length - 1;\n                }\n              }\n            ).finally(() => {\n              delete encoder.deferred[Number(deferredId)];\n            })\n          );\n        }\n        await Promise.race(Object.values(encoder.deferred));\n      }\n      await Promise.all(Object.values(encoder.deferred));\n      controller.close();\n    }\n  });\n  return readable;\n}\nfunction raceSignal(promise, signal) {\n  if (!signal)\n    return promise;\n  if (signal.aborted)\n    return Promise.reject(signal.reason || new Error(\"Signal was aborted.\"));\n  const abort = new Promise((resolve, reject) => {\n    signal.addEventListener(\"abort\", (event) => {\n      reject(signal.reason || new Error(\"Signal was aborted.\"));\n    });\n    promise.then(resolve).catch(reject);\n  });\n  abort.catch(() => {\n  });\n  return Promise.race([abort, promise]);\n}\nexport {\n  decode,\n  encode\n};\n"]},"metadata":{},"sourceType":"module"}