{"ast":null,"code":"/**\n * react-router v7.5.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { FrameworkContext, RemixErrorBoundary, RouterProvider, createBrowserHistory, createClientRoutes, createClientRoutesWithHMRRevalidationOptOut, createRouter, decodeViaTurboStream, deserializeErrors, getPatchRoutesOnNavigationFunction, getSingleFetchDataStrategy, hydrationRouteProperties, invariant, mapRouteProperties, matchRoutes, shouldHydrateRouteLoader, useFogOFWarDiscovery } from \"./chunk-LSOULM7L.mjs\"; // lib/dom-export/dom-router-provider.tsx\n\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nfunction RouterProvider2(props) {\n  return /* @__PURE__ */React.createElement(RouterProvider, {\n    flushSync: ReactDOM.flushSync,\n    ...props\n  });\n} // lib/dom-export/hydrated-router.tsx\n\n\nimport * as React2 from \"react\";\nvar ssrInfo = null;\nvar router = null;\n\nfunction initSsrInfo() {\n  if (!ssrInfo && window.__reactRouterContext && window.__reactRouterManifest && window.__reactRouterRouteModules) {\n    if (window.__reactRouterManifest.sri === true) {\n      const importMap = document.querySelector(\"script[rr-importmap]\");\n\n      if (importMap?.textContent) {\n        try {\n          window.__reactRouterManifest.sri = JSON.parse(importMap.textContent).integrity;\n        } catch (err) {\n          console.error(\"Failed to parse import map\", err);\n        }\n      }\n    }\n\n    ssrInfo = {\n      context: window.__reactRouterContext,\n      manifest: window.__reactRouterManifest,\n      routeModules: window.__reactRouterRouteModules,\n      stateDecodingPromise: void 0,\n      router: void 0,\n      routerInitialized: false\n    };\n  }\n}\n\nfunction createHydratedRouter(_ref) {\n  let {\n    unstable_getContext\n  } = _ref;\n  initSsrInfo();\n\n  if (!ssrInfo) {\n    throw new Error(\"You must be using the SSR features of React Router in order to skip passing a `router` prop to `<RouterProvider>`\");\n  }\n\n  let localSsrInfo = ssrInfo;\n\n  if (!ssrInfo.stateDecodingPromise) {\n    let stream = ssrInfo.context.stream;\n    invariant(stream, \"No stream found for single fetch decoding\");\n    ssrInfo.context.stream = void 0;\n    ssrInfo.stateDecodingPromise = decodeViaTurboStream(stream, window).then(value => {\n      ssrInfo.context.state = value.value;\n      localSsrInfo.stateDecodingPromise.value = true;\n    }).catch(e => {\n      localSsrInfo.stateDecodingPromise.error = e;\n    });\n  }\n\n  if (ssrInfo.stateDecodingPromise.error) {\n    throw ssrInfo.stateDecodingPromise.error;\n  }\n\n  if (!ssrInfo.stateDecodingPromise.value) {\n    throw ssrInfo.stateDecodingPromise;\n  }\n\n  let routes = createClientRoutes(ssrInfo.manifest.routes, ssrInfo.routeModules, ssrInfo.context.state, ssrInfo.context.ssr, ssrInfo.context.isSpaMode);\n  let hydrationData = void 0;\n  let loaderData = ssrInfo.context.state.loaderData;\n\n  if (ssrInfo.context.isSpaMode) {\n    if (ssrInfo.manifest.routes.root?.hasLoader && loaderData && \"root\" in loaderData) {\n      hydrationData = {\n        loaderData: {\n          root: loaderData.root\n        }\n      };\n    }\n  } else {\n    hydrationData = { ...ssrInfo.context.state,\n      loaderData: { ...loaderData\n      }\n    };\n    let initialMatches = matchRoutes(routes, window.location, window.__reactRouterContext?.basename);\n\n    if (initialMatches) {\n      for (let match of initialMatches) {\n        let routeId = match.route.id;\n        let route = ssrInfo.routeModules[routeId];\n        let manifestRoute = ssrInfo.manifest.routes[routeId];\n\n        if (route && manifestRoute && shouldHydrateRouteLoader(manifestRoute, route, ssrInfo.context.isSpaMode) && (route.HydrateFallback || !manifestRoute.hasLoader)) {\n          delete hydrationData.loaderData[routeId];\n        } else if (manifestRoute && !manifestRoute.hasLoader) {\n          hydrationData.loaderData[routeId] = null;\n        }\n      }\n    }\n\n    if (hydrationData && hydrationData.errors) {\n      hydrationData.errors = deserializeErrors(hydrationData.errors);\n    }\n  }\n\n  let router2 = createRouter({\n    routes,\n    history: createBrowserHistory(),\n    basename: ssrInfo.context.basename,\n    unstable_getContext,\n    hydrationData,\n    hydrationRouteProperties,\n    mapRouteProperties,\n    future: {\n      unstable_middleware: ssrInfo.context.future.unstable_middleware\n    },\n    dataStrategy: getSingleFetchDataStrategy(() => router2, routeId => {\n      let manifestRoute = ssrInfo.manifest.routes[routeId];\n      invariant(manifestRoute, \"Route not found in manifest/routeModules\");\n      let routeModule = ssrInfo.routeModules[routeId];\n      return {\n        hasLoader: manifestRoute.hasLoader,\n        hasClientLoader: manifestRoute.hasClientLoader,\n        // In some cases the module may not be loaded yet and we don't care\n        // if it's got shouldRevalidate or not\n        hasShouldRevalidate: routeModule ? routeModule.shouldRevalidate != null : void 0\n      };\n    }, ssrInfo.context.ssr, ssrInfo.context.basename),\n    patchRoutesOnNavigation: getPatchRoutesOnNavigationFunction(ssrInfo.manifest, ssrInfo.routeModules, ssrInfo.context.ssr, ssrInfo.context.isSpaMode, ssrInfo.context.basename)\n  });\n  ssrInfo.router = router2;\n\n  if (router2.state.initialized) {\n    ssrInfo.routerInitialized = true;\n    router2.initialize();\n  }\n\n  router2.createRoutesForHMR =\n  /* spacer so ts-ignore does not affect the right hand of the assignment */\n  createClientRoutesWithHMRRevalidationOptOut;\n  window.__reactRouterDataRouter = router2;\n  return router2;\n}\n\nfunction HydratedRouter(props) {\n  if (!router) {\n    router = createHydratedRouter({\n      unstable_getContext: props.unstable_getContext\n    });\n  }\n\n  let [criticalCss, setCriticalCss] = React2.useState(process.env.NODE_ENV === \"development\" ? ssrInfo?.context.criticalCss : void 0);\n\n  if (process.env.NODE_ENV === \"development\") {\n    if (ssrInfo) {\n      window.__reactRouterClearCriticalCss = () => setCriticalCss(void 0);\n    }\n  }\n\n  let [location, setLocation] = React2.useState(router.state.location);\n  React2.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router && !ssrInfo.routerInitialized) {\n      ssrInfo.routerInitialized = true;\n      ssrInfo.router.initialize();\n    }\n  }, []);\n  React2.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router) {\n      return ssrInfo.router.subscribe(newState => {\n        if (newState.location !== location) {\n          setLocation(newState.location);\n        }\n      });\n    }\n  }, [location]);\n  invariant(ssrInfo, \"ssrInfo unavailable for HydratedRouter\");\n  useFogOFWarDiscovery(router, ssrInfo.manifest, ssrInfo.routeModules, ssrInfo.context.ssr, ssrInfo.context.isSpaMode);\n  return (// This fragment is important to ensure we match the <ServerRouter> JSX\n    // structure so that useId values hydrate correctly\n\n    /* @__PURE__ */\n    React2.createElement(React2.Fragment, null, /* @__PURE__ */React2.createElement(FrameworkContext.Provider, {\n      value: {\n        manifest: ssrInfo.manifest,\n        routeModules: ssrInfo.routeModules,\n        future: ssrInfo.context.future,\n        criticalCss,\n        ssr: ssrInfo.context.ssr,\n        isSpaMode: ssrInfo.context.isSpaMode\n      }\n    }, /* @__PURE__ */React2.createElement(RemixErrorBoundary, {\n      location\n    }, /* @__PURE__ */React2.createElement(RouterProvider2, {\n      router\n    }))), /* @__PURE__ */React2.createElement(React2.Fragment, null))\n  );\n}\n\nexport { HydratedRouter, RouterProvider2 as RouterProvider };","map":{"version":3,"sources":["/Users/am/Desktop/PixelAlbum/PixelAlbum/node_modules/react-router-dom/node_modules/react-router/dist/development/dom-export.mjs"],"names":["FrameworkContext","RemixErrorBoundary","RouterProvider","createBrowserHistory","createClientRoutes","createClientRoutesWithHMRRevalidationOptOut","createRouter","decodeViaTurboStream","deserializeErrors","getPatchRoutesOnNavigationFunction","getSingleFetchDataStrategy","hydrationRouteProperties","invariant","mapRouteProperties","matchRoutes","shouldHydrateRouteLoader","useFogOFWarDiscovery","React","ReactDOM","RouterProvider2","props","createElement","flushSync","React2","ssrInfo","router","initSsrInfo","window","__reactRouterContext","__reactRouterManifest","__reactRouterRouteModules","sri","importMap","document","querySelector","textContent","JSON","parse","integrity","err","console","error","context","manifest","routeModules","stateDecodingPromise","routerInitialized","createHydratedRouter","unstable_getContext","Error","localSsrInfo","stream","then","value","state","catch","e","routes","ssr","isSpaMode","hydrationData","loaderData","root","hasLoader","initialMatches","location","basename","match","routeId","route","id","manifestRoute","HydrateFallback","errors","router2","history","future","unstable_middleware","dataStrategy","routeModule","hasClientLoader","hasShouldRevalidate","shouldRevalidate","patchRoutesOnNavigation","initialized","initialize","createRoutesForHMR","__reactRouterDataRouter","HydratedRouter","criticalCss","setCriticalCss","useState","process","env","NODE_ENV","__reactRouterClearCriticalCss","setLocation","useLayoutEffect","subscribe","newState","Fragment","Provider"],"mappings":"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","sourcesContent":["/**\n * react-router v7.5.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport {\n  FrameworkContext,\n  RemixErrorBoundary,\n  RouterProvider,\n  createBrowserHistory,\n  createClientRoutes,\n  createClientRoutesWithHMRRevalidationOptOut,\n  createRouter,\n  decodeViaTurboStream,\n  deserializeErrors,\n  getPatchRoutesOnNavigationFunction,\n  getSingleFetchDataStrategy,\n  hydrationRouteProperties,\n  invariant,\n  mapRouteProperties,\n  matchRoutes,\n  shouldHydrateRouteLoader,\n  useFogOFWarDiscovery\n} from \"./chunk-LSOULM7L.mjs\";\n\n// lib/dom-export/dom-router-provider.tsx\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nfunction RouterProvider2(props) {\n  return /* @__PURE__ */ React.createElement(RouterProvider, { flushSync: ReactDOM.flushSync, ...props });\n}\n\n// lib/dom-export/hydrated-router.tsx\nimport * as React2 from \"react\";\nvar ssrInfo = null;\nvar router = null;\nfunction initSsrInfo() {\n  if (!ssrInfo && window.__reactRouterContext && window.__reactRouterManifest && window.__reactRouterRouteModules) {\n    if (window.__reactRouterManifest.sri === true) {\n      const importMap = document.querySelector(\"script[rr-importmap]\");\n      if (importMap?.textContent) {\n        try {\n          window.__reactRouterManifest.sri = JSON.parse(\n            importMap.textContent\n          ).integrity;\n        } catch (err) {\n          console.error(\"Failed to parse import map\", err);\n        }\n      }\n    }\n    ssrInfo = {\n      context: window.__reactRouterContext,\n      manifest: window.__reactRouterManifest,\n      routeModules: window.__reactRouterRouteModules,\n      stateDecodingPromise: void 0,\n      router: void 0,\n      routerInitialized: false\n    };\n  }\n}\nfunction createHydratedRouter({\n  unstable_getContext\n}) {\n  initSsrInfo();\n  if (!ssrInfo) {\n    throw new Error(\n      \"You must be using the SSR features of React Router in order to skip passing a `router` prop to `<RouterProvider>`\"\n    );\n  }\n  let localSsrInfo = ssrInfo;\n  if (!ssrInfo.stateDecodingPromise) {\n    let stream = ssrInfo.context.stream;\n    invariant(stream, \"No stream found for single fetch decoding\");\n    ssrInfo.context.stream = void 0;\n    ssrInfo.stateDecodingPromise = decodeViaTurboStream(stream, window).then((value) => {\n      ssrInfo.context.state = value.value;\n      localSsrInfo.stateDecodingPromise.value = true;\n    }).catch((e) => {\n      localSsrInfo.stateDecodingPromise.error = e;\n    });\n  }\n  if (ssrInfo.stateDecodingPromise.error) {\n    throw ssrInfo.stateDecodingPromise.error;\n  }\n  if (!ssrInfo.stateDecodingPromise.value) {\n    throw ssrInfo.stateDecodingPromise;\n  }\n  let routes = createClientRoutes(\n    ssrInfo.manifest.routes,\n    ssrInfo.routeModules,\n    ssrInfo.context.state,\n    ssrInfo.context.ssr,\n    ssrInfo.context.isSpaMode\n  );\n  let hydrationData = void 0;\n  let loaderData = ssrInfo.context.state.loaderData;\n  if (ssrInfo.context.isSpaMode) {\n    if (ssrInfo.manifest.routes.root?.hasLoader && loaderData && \"root\" in loaderData) {\n      hydrationData = {\n        loaderData: {\n          root: loaderData.root\n        }\n      };\n    }\n  } else {\n    hydrationData = {\n      ...ssrInfo.context.state,\n      loaderData: { ...loaderData }\n    };\n    let initialMatches = matchRoutes(\n      routes,\n      window.location,\n      window.__reactRouterContext?.basename\n    );\n    if (initialMatches) {\n      for (let match of initialMatches) {\n        let routeId = match.route.id;\n        let route = ssrInfo.routeModules[routeId];\n        let manifestRoute = ssrInfo.manifest.routes[routeId];\n        if (route && manifestRoute && shouldHydrateRouteLoader(\n          manifestRoute,\n          route,\n          ssrInfo.context.isSpaMode\n        ) && (route.HydrateFallback || !manifestRoute.hasLoader)) {\n          delete hydrationData.loaderData[routeId];\n        } else if (manifestRoute && !manifestRoute.hasLoader) {\n          hydrationData.loaderData[routeId] = null;\n        }\n      }\n    }\n    if (hydrationData && hydrationData.errors) {\n      hydrationData.errors = deserializeErrors(hydrationData.errors);\n    }\n  }\n  let router2 = createRouter({\n    routes,\n    history: createBrowserHistory(),\n    basename: ssrInfo.context.basename,\n    unstable_getContext,\n    hydrationData,\n    hydrationRouteProperties,\n    mapRouteProperties,\n    future: {\n      unstable_middleware: ssrInfo.context.future.unstable_middleware\n    },\n    dataStrategy: getSingleFetchDataStrategy(\n      () => router2,\n      (routeId) => {\n        let manifestRoute = ssrInfo.manifest.routes[routeId];\n        invariant(manifestRoute, \"Route not found in manifest/routeModules\");\n        let routeModule = ssrInfo.routeModules[routeId];\n        return {\n          hasLoader: manifestRoute.hasLoader,\n          hasClientLoader: manifestRoute.hasClientLoader,\n          // In some cases the module may not be loaded yet and we don't care\n          // if it's got shouldRevalidate or not\n          hasShouldRevalidate: routeModule ? routeModule.shouldRevalidate != null : void 0\n        };\n      },\n      ssrInfo.context.ssr,\n      ssrInfo.context.basename\n    ),\n    patchRoutesOnNavigation: getPatchRoutesOnNavigationFunction(\n      ssrInfo.manifest,\n      ssrInfo.routeModules,\n      ssrInfo.context.ssr,\n      ssrInfo.context.isSpaMode,\n      ssrInfo.context.basename\n    )\n  });\n  ssrInfo.router = router2;\n  if (router2.state.initialized) {\n    ssrInfo.routerInitialized = true;\n    router2.initialize();\n  }\n  router2.createRoutesForHMR = /* spacer so ts-ignore does not affect the right hand of the assignment */\n  createClientRoutesWithHMRRevalidationOptOut;\n  window.__reactRouterDataRouter = router2;\n  return router2;\n}\nfunction HydratedRouter(props) {\n  if (!router) {\n    router = createHydratedRouter({\n      unstable_getContext: props.unstable_getContext\n    });\n  }\n  let [criticalCss, setCriticalCss] = React2.useState(\n    process.env.NODE_ENV === \"development\" ? ssrInfo?.context.criticalCss : void 0\n  );\n  if (process.env.NODE_ENV === \"development\") {\n    if (ssrInfo) {\n      window.__reactRouterClearCriticalCss = () => setCriticalCss(void 0);\n    }\n  }\n  let [location, setLocation] = React2.useState(router.state.location);\n  React2.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router && !ssrInfo.routerInitialized) {\n      ssrInfo.routerInitialized = true;\n      ssrInfo.router.initialize();\n    }\n  }, []);\n  React2.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router) {\n      return ssrInfo.router.subscribe((newState) => {\n        if (newState.location !== location) {\n          setLocation(newState.location);\n        }\n      });\n    }\n  }, [location]);\n  invariant(ssrInfo, \"ssrInfo unavailable for HydratedRouter\");\n  useFogOFWarDiscovery(\n    router,\n    ssrInfo.manifest,\n    ssrInfo.routeModules,\n    ssrInfo.context.ssr,\n    ssrInfo.context.isSpaMode\n  );\n  return (\n    // This fragment is important to ensure we match the <ServerRouter> JSX\n    // structure so that useId values hydrate correctly\n    /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\n      FrameworkContext.Provider,\n      {\n        value: {\n          manifest: ssrInfo.manifest,\n          routeModules: ssrInfo.routeModules,\n          future: ssrInfo.context.future,\n          criticalCss,\n          ssr: ssrInfo.context.ssr,\n          isSpaMode: ssrInfo.context.isSpaMode\n        }\n      },\n      /* @__PURE__ */ React2.createElement(RemixErrorBoundary, { location }, /* @__PURE__ */ React2.createElement(RouterProvider2, { router }))\n    ), /* @__PURE__ */ React2.createElement(React2.Fragment, null))\n  );\n}\nexport {\n  HydratedRouter,\n  RouterProvider2 as RouterProvider\n};\n"]},"metadata":{},"sourceType":"module"}