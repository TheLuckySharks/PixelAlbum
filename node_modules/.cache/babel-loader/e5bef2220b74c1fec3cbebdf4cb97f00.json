{"ast":null,"code":"import _slicedToArray from\"/Users/am/Desktop/RockHeardle/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import YouTube from\"react-youtube\";import{IoPlay}from\"react-icons/io5\";import{event}from\"react-ga\";import{playTimes}from\"../../constants\";import*as Styled from\"./index.styled\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export function Player(_ref){var id=_ref.id,currentTry=_ref.currentTry;var opts={width:\"0\",height:\"0\"};// react-youtube doesn't export types for this\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar playerRef=React.useRef(null);var currentPlayTime=playTimes[currentTry];var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),play=_React$useState2[0],setPlay=_React$useState2[1];var _React$useState3=React.useState(0),_React$useState4=_slicedToArray(_React$useState3,2),currentTime=_React$useState4[0],setCurrentTime=_React$useState4[1];var _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,2),isReady=_React$useState6[0],setIsReady=_React$useState6[1];React.useEffect(function(){setInterval(function(){var _playerRef$current;(_playerRef$current=playerRef.current)===null||_playerRef$current===void 0?void 0:_playerRef$current.internalPlayer.getCurrentTime().then(function(time){setCurrentTime(time);});},250);},[]);React.useEffect(function(){if(play){if(currentTime*1000>=currentPlayTime){var _playerRef$current2,_playerRef$current3;(_playerRef$current2=playerRef.current)===null||_playerRef$current2===void 0?void 0:_playerRef$current2.internalPlayer.pauseVideo();(_playerRef$current3=playerRef.current)===null||_playerRef$current3===void 0?void 0:_playerRef$current3.internalPlayer.seekTo(0);setPlay(false);}}},[play,currentTime]);// don't call play video each time currentTime changes\nvar startPlayback=React.useCallback(function(){var _playerRef$current4;(_playerRef$current4=playerRef.current)===null||_playerRef$current4===void 0?void 0:_playerRef$current4.internalPlayer.playVideo();setPlay(true);event({category:\"Player\",action:\"Played song\"});},[]);var setReady=React.useCallback(function(){setIsReady(true);},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(YouTube,{opts:opts,videoId:id,onReady:setReady,ref:playerRef}),isReady?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Styled.ProgressBackground,{children:[currentTime!==0&&/*#__PURE__*/_jsx(Styled.Progress,{value:currentTime}),playTimes.map(function(playTime){return/*#__PURE__*/_jsx(Styled.Separator,{style:{left:\"\".concat(playTime/16000*100,\"%\")}},playTime);})]}),/*#__PURE__*/_jsxs(Styled.TimeStamps,{children:[/*#__PURE__*/_jsx(Styled.TimeStamp,{children:\"1s\"}),/*#__PURE__*/_jsx(Styled.TimeStamp,{children:\"16s\"})]}),/*#__PURE__*/_jsx(IoPlay,{style:{cursor:\"pointer\"},size:40,color:\"#fff\",onClick:startPlayback})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Loading the player...\"})]});}","map":{"version":3,"sources":["/Users/am/Desktop/RockHeardle/src/components/Player/index.tsx"],"names":["React","YouTube","IoPlay","event","playTimes","Styled","Player","id","currentTry","opts","width","height","playerRef","useRef","currentPlayTime","useState","play","setPlay","currentTime","setCurrentTime","isReady","setIsReady","useEffect","setInterval","current","internalPlayer","getCurrentTime","then","time","pauseVideo","seekTo","startPlayback","useCallback","playVideo","category","action","setReady","map","playTime","left","cursor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport YouTube from \"react-youtube\";\nimport { IoPlay } from \"react-icons/io5\";\nimport { event } from \"react-ga\";\n\nimport { playTimes } from \"../../constants\";\n\nimport * as Styled from \"./index.styled\";\n\ninterface Props {\n  id: string;\n  currentTry: number;\n}\n\nexport function Player({ id, currentTry }: Props) {\n  const opts = {\n    width: \"0\",\n    height: \"0\",\n  };\n\n  // react-youtube doesn't export types for this\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const playerRef = React.useRef<any>(null);\n\n  const currentPlayTime = playTimes[currentTry];\n\n  const [play, setPlay] = React.useState<boolean>(false);\n\n  const [currentTime, setCurrentTime] = React.useState<number>(0);\n\n  const [isReady, setIsReady] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    setInterval(() => {\n      playerRef.current?.internalPlayer\n        .getCurrentTime()\n        .then((time: number) => {\n          setCurrentTime(time);\n        });\n    }, 250);\n  }, []);\n\n  React.useEffect(() => {\n    if (play) {\n      if (currentTime * 1000 >= currentPlayTime) {\n        playerRef.current?.internalPlayer.pauseVideo();\n        playerRef.current?.internalPlayer.seekTo(0);\n        setPlay(false);\n      }\n    }\n  }, [play, currentTime]);\n\n  // don't call play video each time currentTime changes\n  const startPlayback = React.useCallback(() => {\n    playerRef.current?.internalPlayer.playVideo();\n    setPlay(true);\n    event({\n      category: \"Player\",\n      action: \"Played song\",\n    });\n  }, []);\n\n  const setReady = React.useCallback(() => {\n    setIsReady(true);\n  }, []);\n\n  return (\n    <>\n      <YouTube opts={opts} videoId={id} onReady={setReady} ref={playerRef} />\n      {isReady ? (\n        <>\n          <Styled.ProgressBackground>\n            {currentTime !== 0 && <Styled.Progress value={currentTime} />}\n            {playTimes.map((playTime) => (\n              <Styled.Separator\n                style={{ left: `${(playTime / 16000) * 100}%` }}\n                key={playTime}\n              />\n            ))}\n          </Styled.ProgressBackground>\n          <Styled.TimeStamps>\n            <Styled.TimeStamp>1s</Styled.TimeStamp>\n            <Styled.TimeStamp>16s</Styled.TimeStamp>\n          </Styled.TimeStamps>\n          <IoPlay\n            style={{ cursor: \"pointer\" }}\n            size={40}\n            color=\"#fff\"\n            onClick={startPlayback}\n          />\n        </>\n      ) : (\n        <p>Loading the player...</p>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}