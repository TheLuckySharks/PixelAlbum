{"ast":null,"code":"export function scoreToEmoji(guesses){var emojis={incorrect:\"🟥\",correct:\"🟩\",skip:\"⬜\",empty:\"⬛️\"};var todaysDate=new Date();var prefix=\"RockHeardle.com - \".concat(todaysDate.toLocaleDateString(),\" \\uD83C\\uDFA7\");var scoreEmoji=\"\";guesses.forEach(function(guess){if(guess.isCorrect===true){scoreEmoji+=emojis.correct;}else if(guess.skipped===true){scoreEmoji+=emojis.skip;}else if(guess.isCorrect===false){scoreEmoji+=emojis.incorrect;}else{scoreEmoji+=emojis.empty;}});return\"\".concat(prefix,\" \").concat(scoreEmoji);}","map":{"version":3,"sources":["/Users/am/Desktop/RockHeardle/src/helpers/scoreToEmoji.ts"],"names":["scoreToEmoji","guesses","emojis","incorrect","correct","skip","empty","todaysDate","Date","prefix","toLocaleDateString","scoreEmoji","forEach","guess","isCorrect","skipped"],"mappings":"AAEA,MAAO,SAASA,CAAAA,YAAT,CAAsBC,OAAtB,CAAoD,CACzD,GAAMC,CAAAA,MAAM,CAAG,CACbC,SAAS,CAAE,IADE,CAEbC,OAAO,CAAE,IAFI,CAGbC,IAAI,CAAE,GAHO,CAIbC,KAAK,CAAE,IAJM,CAAf,CAMA,GAAMC,CAAAA,UAAU,CAAG,GAAIC,CAAAA,IAAJ,EAAnB,CACA,GAAMC,CAAAA,MAAM,6BAAwBF,UAAU,CAACG,kBAAX,EAAxB,iBAAZ,CAEA,GAAIC,CAAAA,UAAU,CAAG,EAAjB,CAEAV,OAAO,CAACW,OAAR,CAAgB,SAACC,KAAD,CAAsB,CACpC,GAAIA,KAAK,CAACC,SAAN,GAAoB,IAAxB,CAA8B,CAC5BH,UAAU,EAAIT,MAAM,CAACE,OAArB,CACD,CAFD,IAEO,IAAIS,KAAK,CAACE,OAAN,GAAkB,IAAtB,CAA4B,CACjCJ,UAAU,EAAIT,MAAM,CAACG,IAArB,CACD,CAFM,IAEA,IAAIQ,KAAK,CAACC,SAAN,GAAoB,KAAxB,CAA+B,CACpCH,UAAU,EAAIT,MAAM,CAACC,SAArB,CACD,CAFM,IAEA,CACLQ,UAAU,EAAIT,MAAM,CAACI,KAArB,CACD,CACF,CAVD,EAYA,gBAAUG,MAAV,aAAoBE,UAApB,EACD","sourcesContent":["import { GuessType } from \"../types/guess\";\n\nexport function scoreToEmoji(guesses: GuessType[]): string {\n  const emojis = {\n    incorrect: \"🟥\",\n    correct: \"🟩\",\n    skip: \"⬜\",\n    empty: \"⬛️\",\n  };\n  const todaysDate = new Date();\n  const prefix = `RockHeardle.com - ${todaysDate.toLocaleDateString()} 🎧`;\n\n  let scoreEmoji = \"\";\n\n  guesses.forEach((guess: GuessType) => {\n    if (guess.isCorrect === true) {\n      scoreEmoji += emojis.correct;\n    } else if (guess.skipped === true) {\n      scoreEmoji += emojis.skip;\n    } else if (guess.isCorrect === false) {\n      scoreEmoji += emojis.incorrect;\n    } else {\n      scoreEmoji += emojis.empty;\n    }\n  });\n\n  return `${prefix} ${scoreEmoji}`;\n}\n"]},"metadata":{},"sourceType":"module"}