{"ast":null,"code":"var _jsxFileName = \"/Users/am/Downloads/sluchajfun-main 2/src/app.tsx\",\n    _s = $RefreshSig$();\n\nimport { event } from \"react-ga\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport { todaysSolution } from \"./helpers\";\nimport { Header, InfoPopUp, Game, Footer } from \"./components\";\nimport * as Styled from \"./app.styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const initialGuess = {\n    song: undefined,\n    skipped: false,\n    isCorrect: undefined\n  };\n  const [guesses, setGuesses] = React.useState(Array.from({\n    length: 5\n  }).fill(initialGuess));\n  const [currentTry, setCurrentTry] = React.useState(0);\n  const [selectedSong, setSelectedSong] = React.useState();\n  const [didGuess, setDidGuess] = React.useState(false);\n  const firstRun = localStorage.getItem(\"firstRun\") === null;\n  let stats = JSON.parse(localStorage.getItem(\"stats\") || \"{}\");\n  React.useEffect(() => {\n    if (Array.isArray(stats)) {\n      const visitedToday = _.isEqual(todaysSolution, stats[stats.length - 1].solution);\n\n      if (!visitedToday) {\n        stats.push({\n          solution: todaysSolution,\n          currentTry: 0,\n          didGuess: 0\n        });\n      } else {\n        const {\n          currentTry,\n          guesses,\n          didGuess\n        } = stats[stats.length - 1];\n        setCurrentTry(currentTry);\n        setGuesses(guesses);\n        setDidGuess(didGuess);\n      }\n    } else {\n      // initialize stats\n      // useEffect below does rest\n      stats = [];\n      stats.push({\n        solution: todaysSolution\n      });\n    }\n  }, []);\n  React.useEffect(() => {\n    if (Array.isArray(stats)) {\n      stats[stats.length - 1].currentTry = currentTry;\n      stats[stats.length - 1].didGuess = didGuess;\n      stats[stats.length - 1].guesses = guesses;\n    }\n  }), [guesses, currentTry, didGuess];\n  React.useEffect(() => {\n    localStorage.setItem(\"stats\", JSON.stringify(stats));\n  }, [stats]);\n  const [isInfoPopUpOpen, setIsInfoPopUpOpen] = React.useState(firstRun);\n  const openInfoPopUp = React.useCallback(() => {\n    setIsInfoPopUpOpen(true);\n  }, []);\n  const closeInfoPopUp = React.useCallback(() => {\n    if (firstRun) {\n      localStorage.setItem(\"firstRun\", \"false\");\n      setIsInfoPopUpOpen(false);\n    } else {\n      setIsInfoPopUpOpen(false);\n    }\n  }, [localStorage.getItem(\"firstRun\")]);\n  const skip = React.useCallback(() => {\n    setGuesses(guesses => {\n      const newGuesses = [...guesses];\n      newGuesses[currentTry] = {\n        song: undefined,\n        skipped: true,\n        isCorrect: undefined\n      };\n      return newGuesses;\n    });\n    setCurrentTry(currentTry => currentTry + 1);\n    event({\n      category: \"Game\",\n      action: \"Skip\"\n    });\n  }, [currentTry]);\n  const guess = React.useCallback(() => {\n    const isCorrect = selectedSong === todaysSolution;\n\n    if (!selectedSong) {\n      alert(\"Wybierz piosenkę\");\n      return;\n    }\n\n    setGuesses(guesses => {\n      const newGuesses = [...guesses];\n      newGuesses[currentTry] = {\n        song: selectedSong,\n        skipped: false,\n        isCorrect: isCorrect\n      };\n      return newGuesses;\n    });\n    setCurrentTry(currentTry => currentTry + 1);\n    setSelectedSong(undefined);\n\n    if (isCorrect) {\n      setDidGuess(true);\n    }\n\n    event({\n      category: \"Game\",\n      action: \"Guess\",\n      label: `${selectedSong.artist} - ${selectedSong.name}`,\n      value: isCorrect ? 1 : 0\n    });\n  }, [guesses, selectedSong]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      openInfoPopUp: openInfoPopUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), isInfoPopUpOpen && /*#__PURE__*/_jsxDEV(InfoPopUp, {\n      onClose: closeInfoPopUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(Styled.Container, {\n      children: /*#__PURE__*/_jsxDEV(Game, {\n        guesses: guesses,\n        didGuess: didGuess,\n        todaysSolution: todaysSolution,\n        currentTry: currentTry,\n        setSelectedSong: setSelectedSong,\n        skip: skip,\n        guess: guess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ECEK+W4VV0AqPNDB6WsbnBBRrr0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["event","React","_","todaysSolution","Header","InfoPopUp","Game","Footer","Styled","App","initialGuess","song","undefined","skipped","isCorrect","guesses","setGuesses","useState","Array","from","length","fill","currentTry","setCurrentTry","selectedSong","setSelectedSong","didGuess","setDidGuess","firstRun","localStorage","getItem","stats","JSON","parse","useEffect","isArray","visitedToday","isEqual","solution","push","setItem","stringify","isInfoPopUpOpen","setIsInfoPopUpOpen","openInfoPopUp","useCallback","closeInfoPopUp","skip","newGuesses","category","action","guess","alert","label","artist","name","value"],"sources":["/Users/am/Downloads/sluchajfun-main 2/src/app.tsx"],"sourcesContent":["import { event } from \"react-ga\";\n\nimport React from \"react\";\nimport _ from \"lodash\";\n\nimport { Song } from \"./types/song\";\nimport { GuessType } from \"./types/guess\";\n\nimport { todaysSolution } from \"./helpers\";\n\nimport { Header, InfoPopUp, Game, Footer } from \"./components\";\n\nimport * as Styled from \"./app.styled\";\n\nfunction App() {\n  const initialGuess = {\n    song: undefined,\n    skipped: false,\n    isCorrect: undefined,\n  } as GuessType;\n\n  const [guesses, setGuesses] = React.useState<GuessType[]>(\n    Array.from({ length: 5 }).fill(initialGuess) as GuessType[]\n  );\n  const [currentTry, setCurrentTry] = React.useState<number>(0);\n  const [selectedSong, setSelectedSong] = React.useState<Song>();\n  const [didGuess, setDidGuess] = React.useState<boolean>(false);\n\n  const firstRun = localStorage.getItem(\"firstRun\") === null;\n  let stats = JSON.parse(localStorage.getItem(\"stats\") || \"{}\");\n\n  React.useEffect(() => {\n    if (Array.isArray(stats)) {\n      const visitedToday = _.isEqual(\n        todaysSolution,\n        stats[stats.length - 1].solution\n      );\n\n      if (!visitedToday) {\n        stats.push({\n          solution: todaysSolution,\n          currentTry: 0,\n          didGuess: 0,\n        });\n      } else {\n        const { currentTry, guesses, didGuess } = stats[stats.length - 1];\n        setCurrentTry(currentTry);\n        setGuesses(guesses);\n        setDidGuess(didGuess);\n      }\n    } else {\n      // initialize stats\n      // useEffect below does rest\n      stats = [];\n      stats.push({\n        solution: todaysSolution,\n      });\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (Array.isArray(stats)) {\n      stats[stats.length - 1].currentTry = currentTry;\n      stats[stats.length - 1].didGuess = didGuess;\n      stats[stats.length - 1].guesses = guesses;\n    }\n  }),\n    [guesses, currentTry, didGuess];\n\n  React.useEffect(() => {\n    localStorage.setItem(\"stats\", JSON.stringify(stats));\n  }, [stats]);\n\n  const [isInfoPopUpOpen, setIsInfoPopUpOpen] =\n    React.useState<boolean>(firstRun);\n\n  const openInfoPopUp = React.useCallback(() => {\n    setIsInfoPopUpOpen(true);\n  }, []);\n\n  const closeInfoPopUp = React.useCallback(() => {\n    if (firstRun) {\n      localStorage.setItem(\"firstRun\", \"false\");\n      setIsInfoPopUpOpen(false);\n    } else {\n      setIsInfoPopUpOpen(false);\n    }\n  }, [localStorage.getItem(\"firstRun\")]);\n\n  const skip = React.useCallback(() => {\n    setGuesses((guesses: GuessType[]) => {\n      const newGuesses = [...guesses];\n      newGuesses[currentTry] = {\n        song: undefined,\n        skipped: true,\n        isCorrect: undefined,\n      };\n\n      return newGuesses;\n    });\n\n    setCurrentTry((currentTry) => currentTry + 1);\n\n    event({\n      category: \"Game\",\n      action: \"Skip\",\n    });\n  }, [currentTry]);\n\n  const guess = React.useCallback(() => {\n    const isCorrect = selectedSong === todaysSolution;\n\n    if (!selectedSong) {\n      alert(\"Wybierz piosenkę\");\n      return;\n    }\n\n    setGuesses((guesses: GuessType[]) => {\n      const newGuesses = [...guesses];\n      newGuesses[currentTry] = {\n        song: selectedSong,\n        skipped: false,\n        isCorrect: isCorrect,\n      };\n\n      return newGuesses;\n    });\n\n    setCurrentTry((currentTry) => currentTry + 1);\n    setSelectedSong(undefined);\n\n    if (isCorrect) {\n      setDidGuess(true);\n    }\n\n    event({\n      category: \"Game\",\n      action: \"Guess\",\n      label: `${selectedSong.artist} - ${selectedSong.name}`,\n      value: isCorrect ? 1 : 0,\n    });\n  }, [guesses, selectedSong]);\n\n  return (\n    <main>\n      <Header openInfoPopUp={openInfoPopUp} />\n      {isInfoPopUpOpen && <InfoPopUp onClose={closeInfoPopUp} />}\n      <Styled.Container>\n        <Game\n          guesses={guesses}\n          didGuess={didGuess}\n          todaysSolution={todaysSolution}\n          currentTry={currentTry}\n          setSelectedSong={setSelectedSong}\n          skip={skip}\n          guess={guess}\n        />\n      </Styled.Container>\n      <Footer />\n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}