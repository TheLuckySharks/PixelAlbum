{"ast":null,"code":"var _jsxFileName = \"/Users/am/Downloads/sluchajfun-main 2/src/components/Game/index.tsx\";\nimport React from \"react\";\nimport { playTimes } from \"../../constants\";\nimport { Button, Guess, Player, Search, Result } from \"../\";\nimport * as Styled from \"./index.styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Game(_ref) {\n  let {\n    guesses,\n    todaysSolution,\n    currentTry,\n    didGuess,\n    setSelectedSong,\n    skip,\n    guess\n  } = _ref;\n\n  if (didGuess || currentTry === 6) {\n    return /*#__PURE__*/_jsxDEV(Result, {\n      didGuess: didGuess,\n      currentTry: currentTry,\n      todaysSolution: todaysSolution,\n      guesses: guesses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [guesses.map((guess, index) => /*#__PURE__*/_jsxDEV(Guess, {\n      guess: guess,\n      isCorrect: guess.isCorrect,\n      active: index === currentTry\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Player, {\n      id: todaysSolution.youtubeId,\n      currentTry: currentTry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      currentTry: currentTry,\n      setSelectedSong: setSelectedSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Styled.Buttons, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: skip,\n        children: currentTry === 5 ? \"Poddaj się\" : `Pomiń +${playTimes[currentTry] / 1000}s`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"green\",\n        onClick: guess,\n        children: \"Zgadnij\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","playTimes","Button","Guess","Player","Search","Result","Styled","Game","guesses","todaysSolution","currentTry","didGuess","setSelectedSong","skip","guess","map","index","isCorrect","youtubeId"],"sources":["/Users/am/Downloads/sluchajfun-main 2/src/components/Game/index.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { GuessType } from \"../../types/guess\";\nimport { Song } from \"../../types/song\";\nimport { playTimes } from \"../../constants\";\n\nimport { Button, Guess, Player, Search, Result } from \"../\";\n\nimport * as Styled from \"./index.styled\";\n\ninterface Props {\n  guesses: GuessType[];\n  todaysSolution: Song;\n  currentTry: number;\n  didGuess: boolean;\n  setSelectedSong: React.Dispatch<React.SetStateAction<Song | undefined>>;\n  skip: () => void;\n  guess: () => void;\n}\n\nexport function Game({\n  guesses,\n  todaysSolution,\n  currentTry,\n  didGuess,\n  setSelectedSong,\n  skip,\n  guess,\n}: Props) {\n  if (didGuess || currentTry === 6) {\n    return (\n      <Result\n        didGuess={didGuess}\n        currentTry={currentTry}\n        todaysSolution={todaysSolution}\n        guesses={guesses}\n      />\n    );\n  }\n  return (\n    <>\n      {guesses.map((guess: GuessType, index) => (\n        <Guess\n          key={index}\n          guess={guess}\n          isCorrect={guess.isCorrect}\n          active={index === currentTry}\n        />\n      ))}\n      <Player id={todaysSolution.youtubeId} currentTry={currentTry} />\n      <Search currentTry={currentTry} setSelectedSong={setSelectedSong} />\n\n      <Styled.Buttons>\n        <Button onClick={skip}>\n          {currentTry === 5\n            ? \"Poddaj się\"\n            : `Pomiń +${playTimes[currentTry] / 1000}s`}\n        </Button>\n        <Button variant=\"green\" onClick={guess}>\n          Zgadnij\n        </Button>\n      </Styled.Buttons>\n    </>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,MAAxB,EAAgCC,MAAhC,EAAwCC,MAAxC,QAAsD,KAAtD;AAEA,OAAO,KAAKC,MAAZ,MAAwB,gBAAxB;;;AAYA,OAAO,SAASC,IAAT,OAQG;EAAA,IARW;IACnBC,OADmB;IAEnBC,cAFmB;IAGnBC,UAHmB;IAInBC,QAJmB;IAKnBC,eALmB;IAMnBC,IANmB;IAOnBC;EAPmB,CAQX;;EACR,IAAIH,QAAQ,IAAID,UAAU,KAAK,CAA/B,EAAkC;IAChC,oBACE,QAAC,MAAD;MACE,QAAQ,EAAEC,QADZ;MAEE,UAAU,EAAED,UAFd;MAGE,cAAc,EAAED,cAHlB;MAIE,OAAO,EAAED;IAJX;MAAA;MAAA;MAAA;IAAA,QADF;EAQD;;EACD,oBACE;IAAA,WACGA,OAAO,CAACO,GAAR,CAAY,CAACD,KAAD,EAAmBE,KAAnB,kBACX,QAAC,KAAD;MAEE,KAAK,EAAEF,KAFT;MAGE,SAAS,EAAEA,KAAK,CAACG,SAHnB;MAIE,MAAM,EAAED,KAAK,KAAKN;IAJpB,GACOM,KADP;MAAA;MAAA;MAAA;IAAA,QADD,CADH,eASE,QAAC,MAAD;MAAQ,EAAE,EAAEP,cAAc,CAACS,SAA3B;MAAsC,UAAU,EAAER;IAAlD;MAAA;MAAA;MAAA;IAAA,QATF,eAUE,QAAC,MAAD;MAAQ,UAAU,EAAEA,UAApB;MAAgC,eAAe,EAAEE;IAAjD;MAAA;MAAA;MAAA;IAAA,QAVF,eAYE,QAAC,MAAD,CAAQ,OAAR;MAAA,wBACE,QAAC,MAAD;QAAQ,OAAO,EAAEC,IAAjB;QAAA,UACGH,UAAU,KAAK,CAAf,GACG,YADH,GAEI,UAASV,SAAS,CAACU,UAAD,CAAT,GAAwB,IAAK;MAH7C;QAAA;QAAA;QAAA;MAAA,QADF,eAME,QAAC,MAAD;QAAQ,OAAO,EAAC,OAAhB;QAAwB,OAAO,EAAEI,KAAjC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA,gBADF;AAyBD;KA5CeP,I"},"metadata":{},"sourceType":"module"}