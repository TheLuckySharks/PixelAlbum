{"ast":null,"code":"import{songs}from\"../constants\";export function searchSong(searchTerm){searchTerm=searchTerm.toLowerCase();var filteredSongs=[];var addedSongs=new Set();songs.forEach(function(song){var songName=song.name.toLowerCase();var songArtist=song.artist.toLowerCase();if((songArtist.includes(searchTerm)||songName.includes(searchTerm))&&!addedSongs.has(songName)){filteredSongs.push(song);addedSongs.add(songName);}});return filteredSongs.sort(function(a,b){return a.artist.toLowerCase().localeCompare(b.artist.toLocaleLowerCase());}).slice(0,4);}","map":{"version":3,"sources":["/Users/am/Desktop/PixelAlbum/PixelAlbum/src/helpers/searchSong.ts"],"names":["songs","searchSong","searchTerm","toLowerCase","filteredSongs","addedSongs","Set","forEach","song","songName","name","songArtist","artist","includes","has","push","add","sort","a","b","localeCompare","toLocaleLowerCase","slice"],"mappings":"AAAA,OAASA,KAAT,KAAsB,cAAtB,CAGA,MAAO,SAASC,CAAAA,UAAT,CAAoBC,UAApB,CAAgD,CACrDA,UAAU,CAAGA,UAAU,CAACC,WAAX,EAAb,CAEA,GAAMC,CAAAA,aAAqB,CAAG,EAA9B,CACA,GAAMC,CAAAA,UAAuB,CAAG,GAAIC,CAAAA,GAAJ,EAAhC,CAEAN,KAAK,CAACO,OAAN,CAAc,SAACC,IAAD,CAAgB,CAC5B,GAAMC,CAAAA,QAAQ,CAAGD,IAAI,CAACE,IAAL,CAAUP,WAAV,EAAjB,CACA,GAAMQ,CAAAA,UAAU,CAAGH,IAAI,CAACI,MAAL,CAAYT,WAAZ,EAAnB,CAEA,GACE,CAACQ,UAAU,CAACE,QAAX,CAAoBX,UAApB,GAAmCO,QAAQ,CAACI,QAAT,CAAkBX,UAAlB,CAApC,GACA,CAACG,UAAU,CAACS,GAAX,CAAeL,QAAf,CAFH,CAGE,CACAL,aAAa,CAACW,IAAd,CAAmBP,IAAnB,EACAH,UAAU,CAACW,GAAX,CAAeP,QAAf,EACD,CACF,CAXD,EAaA,MAAOL,CAAAA,aAAa,CACjBa,IADI,CACC,SAACC,CAAD,CAAIC,CAAJ,QACJD,CAAAA,CAAC,CAACN,MAAF,CAAST,WAAT,GAAuBiB,aAAvB,CAAqCD,CAAC,CAACP,MAAF,CAASS,iBAAT,EAArC,CADI,EADD,EAIJC,KAJI,CAIE,CAJF,CAIK,CAJL,CAAP,CAKD","sourcesContent":["import { songs } from \"../constants\";\nimport { Song } from \"../types/song\";\n\nexport function searchSong(searchTerm: string): Song[] {\n  searchTerm = searchTerm.toLowerCase();\n\n  const filteredSongs: Song[] = [];\n  const addedSongs: Set<string> = new Set();\n\n  songs.forEach((song: Song) => {\n    const songName = song.name.toLowerCase();\n    const songArtist = song.artist.toLowerCase();\n\n    if (\n      (songArtist.includes(searchTerm) || songName.includes(searchTerm)) &&\n      !addedSongs.has(songName)\n    ) {\n      filteredSongs.push(song);\n      addedSongs.add(songName);\n    }\n  });\n\n  return filteredSongs\n    .sort((a, b) =>\n      a.artist.toLowerCase().localeCompare(b.artist.toLocaleLowerCase())\n    )\n    .slice(0, 4);\n}\n"]},"metadata":{},"sourceType":"module"}