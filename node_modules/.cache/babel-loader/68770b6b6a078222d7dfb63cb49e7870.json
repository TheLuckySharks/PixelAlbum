{"ast":null,"code":"var _jsxFileName = \"/Users/am/Desktop/PixelAlbum/src/components/Result/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { scoreToEmoji } from \"../../helpers\";\nimport { Button } from \"../Button\";\nimport * as Styled from \"./index.styled\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Result(_ref) {\n  _s();\n\n  let {\n    didGuess,\n    todaysSolution,\n    guesses,\n    currentTry\n  } = _ref;\n  const hoursToNextDay = Math.floor((new Date(new Date().setHours(24, 0, 0, 0)).getTime() - new Date().getTime()) / 1000 / 60 / 60);\n  const [isCopied, setIsCopied] = React.useState(false);\n  const textForTry = [\"You Rock!\", \"Nice!\", \"Woo!\", \"Phew!\"];\n  const copyResult = React.useCallback(() => {\n    navigator.clipboard.writeText(scoreToEmoji(guesses));\n    setIsCopied(true);\n  }, [guesses]);\n\n  if (didGuess) {\n    const triesConjugation = currentTry === 1 ? \"attempt\" : \"attempts\";\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Styled.ResultTitle, {\n        children: textForTry[currentTry - 1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Styled.SongTitle, {\n        children: [\"Today's album is \", todaysSolution.artist, \" - \", todaysSolution.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Styled.Tries, {\n        children: [\"You guessed it in \", currentTry, \" \", triesConjugation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: todaysSolution.ClearcoverUrl,\n        alt: \"Album Cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: copyResult,\n          variant: \"green\",\n          children: \"Copy results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), isCopied && /*#__PURE__*/_jsxDEV(Styled.Text, {\n        children: \"Copied to clipboard!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Styled.TimeToNext, {\n        children: [\"New album tomorrow: \", hoursToNextDay, \" hours!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Styled.ResultTitle, {\n        children: \"Better luck next time...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Styled.SongTitle, {\n        children: [\"Today's album is \", todaysSolution.artist, \" - \", todaysSolution.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: todaysSolution.ClearcoverUrl,\n        alt: \"Album Cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: copyResult,\n          variant: \"green\",\n          children: \"Copy results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), isCopied && /*#__PURE__*/_jsxDEV(Styled.Text, {\n        children: \"Copied to clipboard!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Styled.TimeToNext, {\n        children: [\"Try again tomorrow: \", hoursToNextDay, \" hours!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_s(Result, \"Kd7EKYr2D4AeCwTl8WIgabDR+cM=\");\n\n_c = Result;\nconst ButtonContainer = styled.div`\n  margin-top: 20px;\n`;\n_c2 = ButtonContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Result\");\n$RefreshReg$(_c2, \"ButtonContainer\");","map":{"version":3,"sources":["/Users/am/Desktop/PixelAlbum/src/components/Result/index.tsx"],"names":["React","scoreToEmoji","Button","Styled","styled","Result","didGuess","todaysSolution","guesses","currentTry","hoursToNextDay","Math","floor","Date","setHours","getTime","isCopied","setIsCopied","useState","textForTry","copyResult","useCallback","navigator","clipboard","writeText","triesConjugation","artist","name","ClearcoverUrl","ButtonContainer","div"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Song } from \"../../types/song\";\nimport { GuessType } from \"../../types/guess\";\nimport { scoreToEmoji } from \"../../helpers\";\nimport { Button } from \"../Button\";\nimport * as Styled from \"./index.styled\";\nimport styled from \"styled-components\";\n\ninterface Props {\n  didGuess: boolean;\n  currentTry: number;\n  todaysSolution: Song;\n  guesses: GuessType[];\n}\n\nexport function Result({\n  didGuess,\n  todaysSolution,\n  guesses,\n  currentTry,\n}: Props) {\n  const hoursToNextDay = Math.floor(\n    (new Date(new Date().setHours(24, 0, 0, 0)).getTime() -\n      new Date().getTime()) /\n      1000 /\n      60 /\n      60\n  );\n  const [isCopied, setIsCopied] = React.useState(false);\n  const textForTry = [\"You Rock!\", \"Nice!\", \"Woo!\", \"Phew!\"];\n\n  const copyResult = React.useCallback(() => {\n    navigator.clipboard.writeText(scoreToEmoji(guesses));\n    setIsCopied(true);\n  }, [guesses]);\n\n  if (didGuess) {\n    const triesConjugation = currentTry === 1 ? \"attempt\" : \"attempts\";\n\n    return (\n      <>\n        <Styled.ResultTitle>{textForTry[currentTry - 1]}</Styled.ResultTitle>\n        <Styled.SongTitle>\n          Today's album is {todaysSolution.artist} - {todaysSolution.name}\n        </Styled.SongTitle>\n        <Styled.Tries>\n          You guessed it in {currentTry} {triesConjugation}\n        </Styled.Tries>\n        <img src={todaysSolution.ClearcoverUrl} alt=\"Album Cover\" />\n        <ButtonContainer>\n          <Button onClick={copyResult} variant=\"green\">\n            Copy results\n          </Button>\n        </ButtonContainer>\n        {isCopied && <Styled.Text>Copied to clipboard!</Styled.Text>}\n        <Styled.TimeToNext>\n          New album tomorrow: {hoursToNextDay} hours!\n        </Styled.TimeToNext>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <Styled.ResultTitle>Better luck next time...</Styled.ResultTitle>\n        <Styled.SongTitle>\n          Today's album is {todaysSolution.artist} - {todaysSolution.name}\n        </Styled.SongTitle>\n        <img src={todaysSolution.ClearcoverUrl} alt=\"Album Cover\" />\n        <ButtonContainer>\n          <Button onClick={copyResult} variant=\"green\">\n            Copy results\n          </Button>\n        </ButtonContainer>\n\n        {isCopied && <Styled.Text>Copied to clipboard!</Styled.Text>}\n        <Styled.TimeToNext>\n          Try again tomorrow: {hoursToNextDay} hours!\n        </Styled.TimeToNext>\n      </>\n    );\n  }\n}\nconst ButtonContainer = styled.div`\n  margin-top: 20px;\n`;\n"]},"metadata":{},"sourceType":"module"}