{"ast":null,"code":"import _toConsumableArray from\"/Users/am/Desktop/PixelAlbum/PixelAlbum/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/am/Desktop/PixelAlbum/PixelAlbum/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import{Button,Guess,Search,Result}from\"../\";import*as Styled from\"./index.styled\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export function Game(_ref){var guesses=_ref.guesses,todaysSolution=_ref.todaysSolution,currentTry=_ref.currentTry,didGuess=_ref.didGuess,setSelectedSong=_ref.setSelectedSong,skip=_ref.skip,guess=_ref.guess;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),skippedPictures=_useState2[0],setSkippedPictures=_useState2[1];var remainingGuesses=4-currentTry;useEffect(function(){if(!didGuess&&currentTry>0&&!guesses[currentTry-1].isCorrect){var nextSkippedPictureIndex=(currentTry-1)%4;var nextSkippedPicture=todaysSolution.skippedPictures[nextSkippedPictureIndex];setSkippedPictures(function(prevSkippedPictures){return[].concat(_toConsumableArray(prevSkippedPictures),[nextSkippedPicture]);});}},[currentTry,didGuess,guesses,todaysSolution.skippedPictures]);var handleSkip=function handleSkip(){var nextSkippedPictureIndex=currentTry%4;var nextSkippedPicture=todaysSolution.skippedPictures[nextSkippedPictureIndex];setSkippedPictures(function(prevSkippedPictures){return[].concat(_toConsumableArray(prevSkippedPictures),[nextSkippedPicture]);});skip();};if(didGuess||currentTry===4){return/*#__PURE__*/_jsx(Result,{didGuess:didGuess,currentTry:currentTry,todaysSolution:todaysSolution,guesses:guesses});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Styled.Container,{children:[/*#__PURE__*/_jsx(\"div\",{children:skippedPictures.length>0?/*#__PURE__*/_jsx(\"img\",{src:skippedPictures[skippedPictures.length-1],alt:\"Skipped Album Cover\"}):/*#__PURE__*/_jsx(\"img\",{src:todaysSolution.coverUrl,alt:\"Album Cover\"})}),/*#__PURE__*/_jsx(Styled.GuessContainer,{children:guesses.slice(0,4).map(function(guess,index){return/*#__PURE__*/_jsx(Guess,{guess:guess,isCorrect:guess.isCorrect,active:index===currentTry},index);})}),/*#__PURE__*/_jsx(Search,{currentTry:currentTry,setSelectedSong:setSelectedSong})]}),/*#__PURE__*/_jsxs(Styled.Buttons,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleSkip,children:remainingGuesses===1?\"Give Up?\":\"Skip\"}),/*#__PURE__*/_jsx(Button,{variant:\"green\",onClick:guess,children:\"Guess\"})]})]});}","map":{"version":3,"sources":["/Users/am/Desktop/PixelAlbum/PixelAlbum/src/components/Game/index.tsx"],"names":["React","useState","useEffect","Button","Guess","Search","Result","Styled","Game","guesses","todaysSolution","currentTry","didGuess","setSelectedSong","skip","guess","skippedPictures","setSkippedPictures","remainingGuesses","isCorrect","nextSkippedPictureIndex","nextSkippedPicture","prevSkippedPictures","handleSkip","length","coverUrl","slice","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { GuessType } from \"../../types/guess\";\nimport { Song } from \"../../types/song\";\nimport { Button, Guess, Search, Result } from \"../\";\nimport * as Styled from \"./index.styled\";\n\ninterface Props {\n  guesses: GuessType[];\n  todaysSolution: Song;\n  currentTry: number;\n  didGuess: boolean;\n  setSelectedSong: React.Dispatch<React.SetStateAction<Song | undefined>>;\n  skip: () => void;\n  guess: () => void;\n}\n\nexport function Game({\n  guesses,\n  todaysSolution,\n  currentTry,\n  didGuess,\n  setSelectedSong,\n  skip,\n  guess,\n}: Props) {\n  const [skippedPictures, setSkippedPictures] = useState<string[]>([]);\n  const remainingGuesses = 4 - currentTry;\n\n  useEffect(() => {\n    if (!didGuess && currentTry > 0 && !guesses[currentTry - 1].isCorrect) {\n      const nextSkippedPictureIndex = (currentTry - 1) % 4;\n      const nextSkippedPicture =\n        todaysSolution.skippedPictures[nextSkippedPictureIndex];\n      setSkippedPictures((prevSkippedPictures) => [\n        ...prevSkippedPictures,\n        nextSkippedPicture,\n      ]);\n    }\n  }, [currentTry, didGuess, guesses, todaysSolution.skippedPictures]);\n\n  const handleSkip = () => {\n    const nextSkippedPictureIndex = currentTry % 4;\n    const nextSkippedPicture =\n      todaysSolution.skippedPictures[nextSkippedPictureIndex];\n    setSkippedPictures((prevSkippedPictures) => [\n      ...prevSkippedPictures,\n      nextSkippedPicture,\n    ]);\n    skip();\n  };\n\n  if (didGuess || currentTry === 4) {\n    return (\n      <Result\n        didGuess={didGuess}\n        currentTry={currentTry}\n        todaysSolution={todaysSolution}\n        guesses={guesses}\n      />\n    );\n  }\n\n  return (\n    <>\n      <Styled.Container>\n        <div>\n          {skippedPictures.length > 0 ? (\n            <img\n              src={skippedPictures[skippedPictures.length - 1]}\n              alt=\"Skipped Album Cover\"\n            />\n          ) : (\n            <img src={todaysSolution.coverUrl} alt=\"Album Cover\" />\n          )}\n        </div>\n        <Styled.GuessContainer>\n          {guesses.slice(0, 4).map((guess: GuessType, index) => (\n            <Guess\n              key={index}\n              guess={guess}\n              isCorrect={guess.isCorrect}\n              active={index === currentTry}\n            />\n          ))}\n        </Styled.GuessContainer>\n\n        <Search currentTry={currentTry} setSelectedSong={setSelectedSong} />\n      </Styled.Container>\n\n      <Styled.Buttons>\n        <Button onClick={handleSkip}>\n          {remainingGuesses === 1 ? \"Give Up?\" : `Skip`}\n        </Button>\n        <Button variant=\"green\" onClick={guess}>\n          Guess\n        </Button>\n      </Styled.Buttons>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}