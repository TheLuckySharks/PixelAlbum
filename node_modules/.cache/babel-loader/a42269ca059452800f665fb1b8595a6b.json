{"ast":null,"code":"import React from\"react\";import{playTimes}from\"../../constants\";import{Button,Guess,Player,Search,Result}from\"../\";import*as Styled from\"./index.styled\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export function Game(_ref){var guesses=_ref.guesses,todaysSolution=_ref.todaysSolution,currentTry=_ref.currentTry,didGuess=_ref.didGuess,setSelectedSong=_ref.setSelectedSong,skip=_ref.skip,guess=_ref.guess;if(didGuess||currentTry===6){return/*#__PURE__*/_jsx(Result,{didGuess:didGuess,currentTry:currentTry,todaysSolution:todaysSolution,guesses:guesses});}return/*#__PURE__*/_jsxs(_Fragment,{children:[guesses.map(function(guess,index){return/*#__PURE__*/_jsx(Guess,{guess:guess,isCorrect:guess.isCorrect,active:index===currentTry},index);}),/*#__PURE__*/_jsx(Player,{id:todaysSolution.youtubeId,currentTry:currentTry}),/*#__PURE__*/_jsx(Search,{currentTry:currentTry,setSelectedSong:setSelectedSong}),/*#__PURE__*/_jsxs(Styled.Buttons,{children:[/*#__PURE__*/_jsx(Button,{onClick:skip,children:currentTry===5?\"Give Up?\":\"Skip +\".concat(playTimes[currentTry]/1000,\"s\")}),/*#__PURE__*/_jsx(Button,{variant:\"green\",onClick:guess,children:\"Guess\"})]})]});}","map":{"version":3,"sources":["/Users/am/Desktop/sluchajfun-main 2 2/src/components/Game/index.tsx"],"names":["React","playTimes","Button","Guess","Player","Search","Result","Styled","Game","guesses","todaysSolution","currentTry","didGuess","setSelectedSong","skip","guess","map","index","isCorrect","youtubeId"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAIA,OAASC,SAAT,KAA0B,iBAA1B,CAEA,OAASC,MAAT,CAAiBC,KAAjB,CAAwBC,MAAxB,CAAgCC,MAAhC,CAAwCC,MAAxC,KAAsD,KAAtD,CAEA,MAAO,GAAKC,CAAAA,MAAZ,KAAwB,gBAAxB,C,6IAYA,MAAO,SAASC,CAAAA,IAAT,MAQG,IAPRC,CAAAA,OAOQ,MAPRA,OAOQ,CANRC,cAMQ,MANRA,cAMQ,CALRC,UAKQ,MALRA,UAKQ,CAJRC,QAIQ,MAJRA,QAIQ,CAHRC,eAGQ,MAHRA,eAGQ,CAFRC,IAEQ,MAFRA,IAEQ,CADRC,KACQ,MADRA,KACQ,CACR,GAAIH,QAAQ,EAAID,UAAU,GAAK,CAA/B,CAAkC,CAChC,mBACE,KAAC,MAAD,EACE,QAAQ,CAAEC,QADZ,CAEE,UAAU,CAAED,UAFd,CAGE,cAAc,CAAED,cAHlB,CAIE,OAAO,CAAED,OAJX,EADF,CAQD,CACD,mBACE,2BACGA,OAAO,CAACO,GAAR,CAAY,SAACD,KAAD,CAAmBE,KAAnB,qBACX,KAAC,KAAD,EAEE,KAAK,CAAEF,KAFT,CAGE,SAAS,CAAEA,KAAK,CAACG,SAHnB,CAIE,MAAM,CAAED,KAAK,GAAKN,UAJpB,EACOM,KADP,CADW,EAAZ,CADH,cASE,KAAC,MAAD,EAAQ,EAAE,CAAEP,cAAc,CAACS,SAA3B,CAAsC,UAAU,CAAER,UAAlD,EATF,cAUE,KAAC,MAAD,EAAQ,UAAU,CAAEA,UAApB,CAAgC,eAAe,CAAEE,eAAjD,EAVF,cAYE,MAAC,MAAD,CAAQ,OAAR,yBACE,KAAC,MAAD,EAAQ,OAAO,CAAEC,IAAjB,UACGH,UAAU,GAAK,CAAf,CACG,UADH,iBAEYV,SAAS,CAACU,UAAD,CAAT,CAAwB,IAFpC,KADH,EADF,cAME,KAAC,MAAD,EAAQ,OAAO,CAAC,OAAhB,CAAwB,OAAO,CAAEI,KAAjC,mBANF,GAZF,GADF,CAyBD","sourcesContent":["import React from \"react\";\n\nimport { GuessType } from \"../../types/guess\";\nimport { Song } from \"../../types/song\";\nimport { playTimes } from \"../../constants\";\n\nimport { Button, Guess, Player, Search, Result } from \"../\";\n\nimport * as Styled from \"./index.styled\";\n\ninterface Props {\n  guesses: GuessType[];\n  todaysSolution: Song;\n  currentTry: number;\n  didGuess: boolean;\n  setSelectedSong: React.Dispatch<React.SetStateAction<Song | undefined>>;\n  skip: () => void;\n  guess: () => void;\n}\n\nexport function Game({\n  guesses,\n  todaysSolution,\n  currentTry,\n  didGuess,\n  setSelectedSong,\n  skip,\n  guess,\n}: Props) {\n  if (didGuess || currentTry === 6) {\n    return (\n      <Result\n        didGuess={didGuess}\n        currentTry={currentTry}\n        todaysSolution={todaysSolution}\n        guesses={guesses}\n      />\n    );\n  }\n  return (\n    <>\n      {guesses.map((guess: GuessType, index) => (\n        <Guess\n          key={index}\n          guess={guess}\n          isCorrect={guess.isCorrect}\n          active={index === currentTry}\n        />\n      ))}\n      <Player id={todaysSolution.youtubeId} currentTry={currentTry} />\n      <Search currentTry={currentTry} setSelectedSong={setSelectedSong} />\n\n      <Styled.Buttons>\n        <Button onClick={skip}>\n          {currentTry === 5\n            ? \"Give Up?\"\n            : `Skip +${playTimes[currentTry] / 1000}s`}\n        </Button>\n        <Button variant=\"green\" onClick={guess}>\n          Guess\n        </Button>\n      </Styled.Buttons>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}