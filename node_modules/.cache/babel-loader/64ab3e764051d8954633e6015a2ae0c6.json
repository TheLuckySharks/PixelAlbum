{"ast":null,"code":"export function scoreToEmoji(guesses) {\n  const emojis = {\n    incorrect: \"🟥\",\n    correct: \"🟩\",\n    skip: \"⬜\",\n    empty: \"⬛️\"\n  };\n  const todaysDate = new Date();\n  const prefix = `RockHeardle.com - Pixel ${todaysDate.toLocaleDateString()}`;\n  let scoreEmoji = \"\"; // Limit the loop to iterate only 4 times or until the end of the guesses array\n\n  for (let i = 0; i < Math.min(guesses.length, 4); i++) {\n    const guess = guesses[i];\n\n    if (guess.isCorrect === true) {\n      scoreEmoji += emojis.correct;\n    } else if (guess.skipped === true) {\n      scoreEmoji += emojis.skip;\n    } else if (guess.isCorrect === false) {\n      scoreEmoji += emojis.incorrect;\n    } else {\n      scoreEmoji += emojis.empty;\n    }\n  }\n\n  return `${prefix} ${scoreEmoji}`;\n}","map":{"version":3,"sources":["/Users/am/Desktop/PixelAlbum/src/helpers/scoreToEmoji.ts"],"names":["scoreToEmoji","guesses","emojis","incorrect","correct","skip","empty","todaysDate","Date","prefix","toLocaleDateString","scoreEmoji","i","Math","min","length","guess","isCorrect","skipped"],"mappings":"AAEA,OAAO,SAASA,YAAT,CAAsBC,OAAtB,EAAoD;AACzD,QAAMC,MAAM,GAAG;AACbC,IAAAA,SAAS,EAAE,IADE;AAEbC,IAAAA,OAAO,EAAE,IAFI;AAGbC,IAAAA,IAAI,EAAE,GAHO;AAIbC,IAAAA,KAAK,EAAE;AAJM,GAAf;AAMA,QAAMC,UAAU,GAAG,IAAIC,IAAJ,EAAnB;AACA,QAAMC,MAAM,GAAI,2BAA0BF,UAAU,CAACG,kBAAX,EAAgC,EAA1E;AAEA,MAAIC,UAAU,GAAG,EAAjB,CAVyD,CAYzD;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,IAAI,CAACC,GAAL,CAASb,OAAO,CAACc,MAAjB,EAAyB,CAAzB,CAApB,EAAiDH,CAAC,EAAlD,EAAsD;AACpD,UAAMI,KAAK,GAAGf,OAAO,CAACW,CAAD,CAArB;;AACA,QAAII,KAAK,CAACC,SAAN,KAAoB,IAAxB,EAA8B;AAC5BN,MAAAA,UAAU,IAAIT,MAAM,CAACE,OAArB;AACD,KAFD,MAEO,IAAIY,KAAK,CAACE,OAAN,KAAkB,IAAtB,EAA4B;AACjCP,MAAAA,UAAU,IAAIT,MAAM,CAACG,IAArB;AACD,KAFM,MAEA,IAAIW,KAAK,CAACC,SAAN,KAAoB,KAAxB,EAA+B;AACpCN,MAAAA,UAAU,IAAIT,MAAM,CAACC,SAArB;AACD,KAFM,MAEA;AACLQ,MAAAA,UAAU,IAAIT,MAAM,CAACI,KAArB;AACD;AACF;;AAED,SAAQ,GAAEG,MAAO,IAAGE,UAAW,EAA/B;AACD","sourcesContent":["import { GuessType } from \"../types/guess\";\n\nexport function scoreToEmoji(guesses: GuessType[]): string {\n  const emojis = {\n    incorrect: \"🟥\",\n    correct: \"🟩\",\n    skip: \"⬜\",\n    empty: \"⬛️\",\n  };\n  const todaysDate = new Date();\n  const prefix = `RockHeardle.com - Pixel ${todaysDate.toLocaleDateString()}`;\n\n  let scoreEmoji = \"\";\n\n  // Limit the loop to iterate only 4 times or until the end of the guesses array\n  for (let i = 0; i < Math.min(guesses.length, 4); i++) {\n    const guess = guesses[i];\n    if (guess.isCorrect === true) {\n      scoreEmoji += emojis.correct;\n    } else if (guess.skipped === true) {\n      scoreEmoji += emojis.skip;\n    } else if (guess.isCorrect === false) {\n      scoreEmoji += emojis.incorrect;\n    } else {\n      scoreEmoji += emojis.empty;\n    }\n  }\n\n  return `${prefix} ${scoreEmoji}`;\n}\n"]},"metadata":{},"sourceType":"module"}