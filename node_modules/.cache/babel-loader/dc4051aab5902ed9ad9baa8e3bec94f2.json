{"ast":null,"code":"export function scoreToEmoji(guesses){var emojis={incorrect:\"🟥\",correct:\"🟩\",skip:\"⬜\",empty:\"⬛️\"};var todaysDate=new Date();var prefix=\"RockHeardle.com - Pixel \".concat(todaysDate.toLocaleDateString());var scoreEmoji=\"\";// Limit the loop to iterate only 4 times or until the end of the guesses array\nfor(var i=0;i<Math.min(guesses.length,4);i++){var guess=guesses[i];if(guess.isCorrect===true){scoreEmoji+=emojis.correct;}else if(guess.skipped===true){scoreEmoji+=emojis.skip;}else if(guess.isCorrect===false){scoreEmoji+=emojis.incorrect;}else{scoreEmoji+=emojis.empty;}}return\"\".concat(prefix,\" \").concat(scoreEmoji);}","map":{"version":3,"sources":["/Users/am/Desktop/PixelAlbum/PixelAlbum/src/helpers/scoreToEmoji.ts"],"names":["scoreToEmoji","guesses","emojis","incorrect","correct","skip","empty","todaysDate","Date","prefix","toLocaleDateString","scoreEmoji","i","Math","min","length","guess","isCorrect","skipped"],"mappings":"AAEA,MAAO,SAASA,CAAAA,YAAT,CAAsBC,OAAtB,CAAoD,CACzD,GAAMC,CAAAA,MAAM,CAAG,CACbC,SAAS,CAAE,IADE,CAEbC,OAAO,CAAE,IAFI,CAGbC,IAAI,CAAE,GAHO,CAIbC,KAAK,CAAE,IAJM,CAAf,CAMA,GAAMC,CAAAA,UAAU,CAAG,GAAIC,CAAAA,IAAJ,EAAnB,CACA,GAAMC,CAAAA,MAAM,mCAA8BF,UAAU,CAACG,kBAAX,EAA9B,CAAZ,CAEA,GAAIC,CAAAA,UAAU,CAAG,EAAjB,CAEA;AACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGC,IAAI,CAACC,GAAL,CAASb,OAAO,CAACc,MAAjB,CAAyB,CAAzB,CAApB,CAAiDH,CAAC,EAAlD,CAAsD,CACpD,GAAMI,CAAAA,KAAK,CAAGf,OAAO,CAACW,CAAD,CAArB,CACA,GAAII,KAAK,CAACC,SAAN,GAAoB,IAAxB,CAA8B,CAC5BN,UAAU,EAAIT,MAAM,CAACE,OAArB,CACD,CAFD,IAEO,IAAIY,KAAK,CAACE,OAAN,GAAkB,IAAtB,CAA4B,CACjCP,UAAU,EAAIT,MAAM,CAACG,IAArB,CACD,CAFM,IAEA,IAAIW,KAAK,CAACC,SAAN,GAAoB,KAAxB,CAA+B,CACpCN,UAAU,EAAIT,MAAM,CAACC,SAArB,CACD,CAFM,IAEA,CACLQ,UAAU,EAAIT,MAAM,CAACI,KAArB,CACD,CACF,CAED,gBAAUG,MAAV,aAAoBE,UAApB,EACD","sourcesContent":["import { GuessType } from \"../types/guess\";\n\nexport function scoreToEmoji(guesses: GuessType[]): string {\n  const emojis = {\n    incorrect: \"🟥\",\n    correct: \"🟩\",\n    skip: \"⬜\",\n    empty: \"⬛️\",\n  };\n  const todaysDate = new Date();\n  const prefix = `RockHeardle.com - Pixel ${todaysDate.toLocaleDateString()}`;\n\n  let scoreEmoji = \"\";\n\n  // Limit the loop to iterate only 4 times or until the end of the guesses array\n  for (let i = 0; i < Math.min(guesses.length, 4); i++) {\n    const guess = guesses[i];\n    if (guess.isCorrect === true) {\n      scoreEmoji += emojis.correct;\n    } else if (guess.skipped === true) {\n      scoreEmoji += emojis.skip;\n    } else if (guess.isCorrect === false) {\n      scoreEmoji += emojis.incorrect;\n    } else {\n      scoreEmoji += emojis.empty;\n    }\n  }\n\n  return `${prefix} ${scoreEmoji}`;\n}\n"]},"metadata":{},"sourceType":"module"}