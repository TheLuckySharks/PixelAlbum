{"ast":null,"code":"import _slicedToArray from\"/Users/am/Desktop/sluchajfun-main 2 2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import*as Styled from\"./index.styled\";import{jsx as _jsx}from\"react/jsx-runtime\";export function Guess(_ref){var guess=_ref.guess,isCorrect=_ref.isCorrect,active=_ref.active;var song=guess.song,skipped=guess.skipped;var _React$useState=React.useState(\"\"),_React$useState2=_slicedToArray(_React$useState,2),text=_React$useState2[0],setText=_React$useState2[1];React.useEffect(function(){if(song){setText(\"\".concat(song.artist,\" - \").concat(song.name));}else if(skipped){setText(\"SKIPPED\");}else{setText(\"\");}},[guess]);return/*#__PURE__*/_jsx(Styled.Container,{active:active,isCorrect:isCorrect,children:/*#__PURE__*/_jsx(Styled.Text,{children:text})});}","map":{"version":3,"sources":["/Users/am/Desktop/sluchajfun-main 2 2/src/components/Guess/index.tsx"],"names":["React","Styled","Guess","guess","isCorrect","active","song","skipped","useState","text","setText","useEffect","artist","name"],"mappings":"2HAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAIA,MAAO,GAAKC,CAAAA,MAAZ,KAAwB,gBAAxB,C,2CAQA,MAAO,SAASC,CAAAA,KAAT,MAAoD,IAAnCC,CAAAA,KAAmC,MAAnCA,KAAmC,CAA5BC,SAA4B,MAA5BA,SAA4B,CAAjBC,MAAiB,MAAjBA,MAAiB,CACzD,GAAQC,CAAAA,IAAR,CAA0BH,KAA1B,CAAQG,IAAR,CAAcC,OAAd,CAA0BJ,KAA1B,CAAcI,OAAd,CACA,oBAAwBP,KAAK,CAACQ,QAAN,CAAuB,EAAvB,CAAxB,oDAAOC,IAAP,qBAAaC,OAAb,qBAEAV,KAAK,CAACW,SAAN,CAAgB,UAAM,CACpB,GAAIL,IAAJ,CAAU,CACRI,OAAO,WAAIJ,IAAI,CAACM,MAAT,eAAqBN,IAAI,CAACO,IAA1B,EAAP,CACD,CAFD,IAEO,IAAIN,OAAJ,CAAa,CAClBG,OAAO,CAAC,SAAD,CAAP,CACD,CAFM,IAEA,CACLA,OAAO,CAAC,EAAD,CAAP,CACD,CACF,CARD,CAQG,CAACP,KAAD,CARH,EAUA,mBACE,KAAC,MAAD,CAAQ,SAAR,EAAkB,MAAM,CAAEE,MAA1B,CAAkC,SAAS,CAAED,SAA7C,uBACE,KAAC,MAAD,CAAQ,IAAR,WAAcK,IAAd,EADF,EADF,CAKD","sourcesContent":["import React from \"react\";\n\nimport { GuessType } from \"../../types/guess\";\n\nimport * as Styled from \"./index.styled\";\n\ninterface Props {\n  guess: GuessType;\n  isCorrect: boolean | undefined;\n  active: boolean;\n}\n\nexport function Guess({ guess, isCorrect, active }: Props) {\n  const { song, skipped } = guess;\n  const [text, setText] = React.useState<string>(\"\");\n\n  React.useEffect(() => {\n    if (song) {\n      setText(`${song.artist} - ${song.name}`);\n    } else if (skipped) {\n      setText(\"SKIPPED\");\n    } else {\n      setText(\"\");\n    }\n  }, [guess]);\n\n  return (\n    <Styled.Container active={active} isCorrect={isCorrect}>\n      <Styled.Text>{text}</Styled.Text>\n    </Styled.Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}