{"ast":null,"code":"import { songs } from \"../constants\";\nexport function searchSong(searchTerm) {\n  searchTerm = searchTerm.toLowerCase();\n  const filteredSongs = [];\n  const addedSongs = new Set();\n  songs.forEach(song => {\n    const songName = song.name.toLowerCase();\n    const songArtist = song.artist.toLowerCase();\n\n    if ((songArtist.includes(searchTerm) || songName.includes(searchTerm)) && !addedSongs.has(songName)) {\n      filteredSongs.push(song);\n      addedSongs.add(songName);\n    }\n  });\n  return filteredSongs.sort((a, b) => a.artist.toLowerCase().localeCompare(b.artist.toLocaleLowerCase())).slice(0, 4);\n}","map":{"version":3,"sources":["/Users/am/Desktop/PixelAlbum/src/helpers/searchSong.ts"],"names":["songs","searchSong","searchTerm","toLowerCase","filteredSongs","addedSongs","Set","forEach","song","songName","name","songArtist","artist","includes","has","push","add","sort","a","b","localeCompare","toLocaleLowerCase","slice"],"mappings":"AAAA,SAASA,KAAT,QAAsB,cAAtB;AAGA,OAAO,SAASC,UAAT,CAAoBC,UAApB,EAAgD;AACrDA,EAAAA,UAAU,GAAGA,UAAU,CAACC,WAAX,EAAb;AAEA,QAAMC,aAAqB,GAAG,EAA9B;AACA,QAAMC,UAAuB,GAAG,IAAIC,GAAJ,EAAhC;AAEAN,EAAAA,KAAK,CAACO,OAAN,CAAeC,IAAD,IAAgB;AAC5B,UAAMC,QAAQ,GAAGD,IAAI,CAACE,IAAL,CAAUP,WAAV,EAAjB;AACA,UAAMQ,UAAU,GAAGH,IAAI,CAACI,MAAL,CAAYT,WAAZ,EAAnB;;AAEA,QACE,CAACQ,UAAU,CAACE,QAAX,CAAoBX,UAApB,KAAmCO,QAAQ,CAACI,QAAT,CAAkBX,UAAlB,CAApC,KACA,CAACG,UAAU,CAACS,GAAX,CAAeL,QAAf,CAFH,EAGE;AACAL,MAAAA,aAAa,CAACW,IAAd,CAAmBP,IAAnB;AACAH,MAAAA,UAAU,CAACW,GAAX,CAAeP,QAAf;AACD;AACF,GAXD;AAaA,SAAOL,aAAa,CACjBa,IADI,CACC,CAACC,CAAD,EAAIC,CAAJ,KACJD,CAAC,CAACN,MAAF,CAAST,WAAT,GAAuBiB,aAAvB,CAAqCD,CAAC,CAACP,MAAF,CAASS,iBAAT,EAArC,CAFG,EAIJC,KAJI,CAIE,CAJF,EAIK,CAJL,CAAP;AAKD","sourcesContent":["import { songs } from \"../constants\";\nimport { Song } from \"../types/song\";\n\nexport function searchSong(searchTerm: string): Song[] {\n  searchTerm = searchTerm.toLowerCase();\n\n  const filteredSongs: Song[] = [];\n  const addedSongs: Set<string> = new Set();\n\n  songs.forEach((song: Song) => {\n    const songName = song.name.toLowerCase();\n    const songArtist = song.artist.toLowerCase();\n\n    if (\n      (songArtist.includes(searchTerm) || songName.includes(searchTerm)) &&\n      !addedSongs.has(songName)\n    ) {\n      filteredSongs.push(song);\n      addedSongs.add(songName);\n    }\n  });\n\n  return filteredSongs\n    .sort((a, b) =>\n      a.artist.toLowerCase().localeCompare(b.artist.toLocaleLowerCase())\n    )\n    .slice(0, 4);\n}\n"]},"metadata":{},"sourceType":"module"}